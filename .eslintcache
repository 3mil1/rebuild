[{"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts":"1","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx":"2","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx":"3","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts":"4","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx":"5","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx":"6","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx":"7","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx":"8","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx":"9","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts":"10","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts":"11","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx":"12","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx":"13","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx":"14","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts":"15","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js":"16","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts":"17","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js":"18","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts":"19","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts":"20","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx":"21","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx":"22","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx":"23","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx":"24","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js":"25","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx":"26","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx":"27","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts":"28","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts":"29","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx":"30","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx":"31","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx":"32","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx":"33","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts":"34","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx":"35","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx":"36","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx":"37","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Tags/Tags.tsx":"38","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post Loader/PostLoader.tsx":"39","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/InitialiseLoading/InitialiseLoading.tsx":"40","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts":"41","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts":"42","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/ProfileFirstSetUp/ProfileSettings.tsx":"43","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/ProfileFirstSetUp/ProfileDescription-reducer.ts":"44","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ChangePassword/ChangePassword-reducer.ts":"45","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/AlertSnackBar/AlertSnackbar.tsx":"46"},{"size":1813,"mtime":1621457639155,"results":"47","hashOfConfig":"48"},{"size":4093,"mtime":1621538462102,"results":"49","hashOfConfig":"48"},{"size":2239,"mtime":1621539277297,"results":"50","hashOfConfig":"48"},{"size":1868,"mtime":1621526662312,"results":"51","hashOfConfig":"48"},{"size":2878,"mtime":1621413233446,"results":"52","hashOfConfig":"48"},{"size":5000,"mtime":1618815015210,"results":"53","hashOfConfig":"48"},{"size":1654,"mtime":1621538943785,"results":"54","hashOfConfig":"48"},{"size":3912,"mtime":1621410974854,"results":"55","hashOfConfig":"48"},{"size":10738,"mtime":1621538128495,"results":"56","hashOfConfig":"48"},{"size":2152,"mtime":1621530704947,"results":"57","hashOfConfig":"48"},{"size":881,"mtime":1621263252587,"results":"58","hashOfConfig":"48"},{"size":2619,"mtime":1621157319643,"results":"59","hashOfConfig":"48"},{"size":2367,"mtime":1621450228330,"results":"60","hashOfConfig":"48"},{"size":3304,"mtime":1621260568348,"results":"61","hashOfConfig":"48"},{"size":772,"mtime":1621530704921,"results":"62","hashOfConfig":"48"},{"size":196,"mtime":1614614785629,"results":"63","hashOfConfig":"48"},{"size":1495,"mtime":1621518319633,"results":"64","hashOfConfig":"48"},{"size":257,"mtime":1614596746714,"results":"65","hashOfConfig":"48"},{"size":2123,"mtime":1618813407367,"results":"66","hashOfConfig":"48"},{"size":4074,"mtime":1621260568364,"results":"67","hashOfConfig":"48"},{"size":759,"mtime":1614700733526,"results":"68","hashOfConfig":"48"},{"size":5021,"mtime":1621524625417,"results":"69","hashOfConfig":"48"},{"size":4458,"mtime":1621260012578,"results":"70","hashOfConfig":"48"},{"size":2848,"mtime":1621346271186,"results":"71","hashOfConfig":"48"},{"size":165,"mtime":1614590074739,"results":"72","hashOfConfig":"48"},{"size":6891,"mtime":1621538682973,"results":"73","hashOfConfig":"48"},{"size":6063,"mtime":1621259655763,"results":"74","hashOfConfig":"48"},{"size":1950,"mtime":1621519179668,"results":"75","hashOfConfig":"48"},{"size":855,"mtime":1621260568353,"results":"76","hashOfConfig":"48"},{"size":4990,"mtime":1621289033230,"results":"77","hashOfConfig":"48"},{"size":3780,"mtime":1621539409323,"results":"78","hashOfConfig":"48"},{"size":2693,"mtime":1621263252561,"results":"79","hashOfConfig":"48"},{"size":1666,"mtime":1619271840176,"results":"80","hashOfConfig":"48"},{"size":425,"mtime":1614693580608,"results":"81","hashOfConfig":"48"},{"size":4842,"mtime":1617115697967,"results":"82","hashOfConfig":"48"},{"size":672,"mtime":1621536498275,"results":"83","hashOfConfig":"48"},{"size":6122,"mtime":1621259895900,"results":"84","hashOfConfig":"48"},{"size":4845,"mtime":1621530705109,"results":"85","hashOfConfig":"48"},{"size":1675,"mtime":1621164341218,"results":"86","hashOfConfig":"48"},{"size":190,"mtime":1621287247388,"results":"87","hashOfConfig":"48"},{"size":1781,"mtime":1621530016018,"results":"88","hashOfConfig":"48"},{"size":3269,"mtime":1621452441303,"results":"89","hashOfConfig":"48"},{"size":8025,"mtime":1621536251952,"results":"90","hashOfConfig":"48"},{"size":1631,"mtime":1621530406610,"results":"91","hashOfConfig":"48"},{"size":1700,"mtime":1621529754236,"results":"92","hashOfConfig":"48"},{"size":1160,"mtime":1621530963390,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rblnuh",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"107"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx",["204"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx",["205"],"import React from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {Controller, useForm} from \"react-hook-form\";\nimport {TextField} from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useDispatch} from \"react-redux\";\nimport {SendComment} from \"./CommentView-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: '36ch',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\nexport const CommentView = React.memo(function (props: any) {\n    const dispatch = useDispatch()\n    const {handleSubmit, errors: fieldsErrors, control, formState: {errors}, reset} = useForm();\n    const classes = useStyles();\n\n    const onSubmit = (formData: { message: string }) => {\n        dispatch(SendComment(props.postId, 5, formData.message))\n        reset({})\n    };\n\n    return (\n        <>\n            {props.comments.map((comment: { id: number, review_text: string, user: { id: number, firstName: string, lastName: string } }) => {\n                return (\n                    <List className={classes.root} key={comment.id}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <h4>{comment.user.firstName[0] + comment.user.lastName[0]}</h4>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={comment.user.firstName + \" \" + comment.user.lastName}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {comment.review_text}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                    </List>\n                )\n            })}\n            <div style={{margin: 8}}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Controller\n                        name=\"message\"\n                        as={\n                            <TextField\n                                id=\"message\"\n                                helperText={fieldsErrors.message ? fieldsErrors.message.message : ''}\n                                label=\"\"\n                                error={!!fieldsErrors.message}\n                                name=\"message\"\n                                multiline={true}\n                                fullWidth\n                                margin=\"normal\"\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                edge=\"end\"\n                                                type={'submit'}\n                                            >\n                                                {<Tooltip title=\"Komenteeri\">\n                                                    <SendIcon/>\n                                                </Tooltip>}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        }\n                        control={control}\n                        defaultValue=''\n                        rules={{\n                            required: 'Sōnum on tühi'\n                        }}\n                    />\n                </form>\n            </div>\n        </>\n    );\n})\n",["206","207"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx",["208","209"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink, useHistory, useLocation} from \"react-router-dom\";\nimport {logout} from \"../../../redux/auth-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        paper: {\n            marginRight: theme.spacing(2),\n        },\n    }),\n);\n\nexport const ProfileMenu = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n    const history = useHistory();\n    let location = useLocation();\n\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n\n\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    {selector.firstName}\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal\n                        style={{zIndex: 1}}>\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}>\n                                            <NavLink\n                                                to=\"/profile\">Profile\n                                            </NavLink>\n                                        </MenuItem>\n\n                                        <MenuItem onClick={handleClose}>\n                                            {selector.isAuth &&\n                                            <NavLink to={''} onClick={() => dispatch(logout())}>Logout</NavLink>\n                                            }\n                                        </MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n",["210","211"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts",["212"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx",["213"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from \"@material-ui/core/Link\";\nimport {resetPw} from \"./ForgotPassword-reducer\";\nimport {useDispatch} from \"react-redux\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {setStatus} from \"../../app/app-reducer\";\n\n\nexport const ForgotPassword = React.memo(function () {\n    const dispatch = useDispatch()\n\n    const [open, setOpen] = React.useState(false);\n\n    const {handleSubmit, errors: fieldsErrors, control} = useForm();\n\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const onSubmit = (formData: { email: string }) => {\n        dispatch(resetPw(formData.email))\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <Link href=\"#\" variant=\"body2\" onClick={handleClickOpen}>\n                Forgot password?\n            </Link>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Parooli Taastamine</DialogTitle>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <DialogContentText>\n                            Palun sisesta oma email ja me saadame sulle kirja parooli taastumisega.\n                        </DialogContentText>\n                        <Controller\n                            name=\"email\"\n                            as={\n                                <TextField\n                                    helperText={fieldsErrors.email ? fieldsErrors.email.message : ''}\n                                    label=\"Email\"\n                                    error={!!fieldsErrors.email}\n                                    autoComplete=\"email\"\n                                    name=\"email\"\n                                    fullWidth\n                                    autoFocus\n                                />\n                            }\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{\n                                required: 'Required',\n                                pattern: {\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                    message: 'invalid email address'\n                                }\n                            }}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Loobu\n                        </Button>\n                        <Button color=\"primary\" type=\"submit\">\n                            Saada kiri\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    );\n})\n",["214","215"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js",["216","217"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default (formData) => {\n    sessionStorage.setItem(STEPPER_FORM_DATA_KEY, JSON.stringify(formData));\n};\n",["218","219"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts",["220"],"import {ThunkAction} from \"redux-thunk\";\nimport {setError, setStatus} from \"../../app/app-reducer\";\nimport {PasswordApi} from \"../../api/api\";\n\nconst RESET_PASSWORD = 'RESET_PASSWORD'\n\ntype ResetPw = {\n    type: typeof RESET_PASSWORD\n    payload: {\n        email: string\n    }\n}\n\nconst initialState = {\n    email: null\n}\n\nexport const resetPwReducer = (state = initialState, action: ResetPw) => {\n    switch (action.type) {\n        case RESET_PASSWORD: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n    }\n}\n\nconst ResetPw = (email: string): ResetPw => {\n    return {\n        type: RESET_PASSWORD,\n        payload: {\n            email\n        }\n    }\n}\n\ntype ThunkType = ThunkAction<any, any, any, any>;\n\nexport const resetPw = (email: string): ThunkType => {\n    return async (dispatch) => {\n        try {\n            dispatch(setStatus('loading'))\n            PasswordApi.passwordReset(email)\n                .then(response => {\n                    dispatch(ResetPw(email))\n                    dispatch(setStatus('succeeded'))\n                    if (response.data.message === \"Email sent!\") {\n                        dispatch(setStatus('confirm'))\n                    }\n                })\n                .catch((error) => {\n                    dispatch(setError(error.response.data))\n                    dispatch(setStatus('succeeded'))\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js",["221","222"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default () => {\n  const rawFormData = sessionStorage.getItem(STEPPER_FORM_DATA_KEY);\n\n  if (!rawFormData) {\n    return [];\n  }\n\n  return JSON.parse(rawFormData);\n};\n",["223","224"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx",[],["225","226"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx",["227","228"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx",["229"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js",["230","231"],"/* global sessionStorage */\nexport const STEPPER_FORM_DATA_KEY = \"stepper-form-data\";\n\nexport default () => {\n  sessionStorage.removeItem(STEPPER_FORM_DATA_KEY);\n};\n",["232","233"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx",[],["234","235"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx",["236"],"import classes from \"./Posts.module.css\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getPostsData, getTags} from \"./GetPosts-reducer\";\nimport {PostCard} from \"./Post/PostCard\";\nimport {Redirect, useLocation} from \"react-router-dom\";\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport {useForm} from \"react-hook-form\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PostLoader from \"./Post Loader/PostLoader\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport {RequestStatusType} from \"../../app/app-reducer\";\n\n\nexport const Posts = React.memo(function () {\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status)\n    const posts = useSelector((state: any) => state.postsPage.data)\n    const categories = useSelector((state: any) => state.postsPage.categories)\n    const isAuth = useSelector((state: any) => state.auth.isAuth)\n    let location = useLocation();\n\n\n    const {register} = useForm();\n    const dispatch = useDispatch()\n\n    const [tag, setTags] = useState([])\n\n    useEffect(() => {\n        dispatch(getPostsData(1, tag.join()))\n        dispatch(getTags())\n    }, [dispatch, tag]);\n\n\n\n    if (!isAuth) {\n        return <Redirect to={\"/login\"}/>\n    }\n\n\n    return (\n        <>\n            <div className={classes.search}>\n                <div className={classes.filter}>\n                    <div className={classes.filterPadding}>\n                        <span>Filter</span>\n                        <div className={classes.checkboxes}>\n                            <form>\n                                {categories.map((category: any) => <div key={category.id} className={classes.checkbox}>\n                                    <Checkbox\n                                        onChange={(e) => {\n                                            // @ts-ignore\n                                            e.target.checked ? setTags([...tag, category.name]) : setTags((tag) => tag.filter((tag) => tag !== category.name))\n                                        }}\n                                        ref={register}\n                                        name={category.name}\n                                        id={category.name}\n                                        size={'small'}\n                                        color={'primary'}\n                                    />\n\n\n                                    <span>{category.name}</span>\n                                </div>)}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.results}>\n                    <div className={classes.resultsWrapper}>\n                        {status === \"PostLoading\" ? <>\n                                <PostLoader profile={false}/>\n                                <PostLoader profile={false}/>\n                                <PostLoader profile={false}/>\n                            </> :\n                            posts.map((post: any) => {\n                                return (\n                                    <PostCard\n                                        key={post.id}\n                                        id={post.id}\n                                        title={post.title}\n                                        categories={post.categories}\n                                        content={post.content}\n                                        createdAt={post.createdAt}\n                                        updatedAt={post.updatedAt}\n                                        user={post.user}\n                                    />\n                                )\n                            })\n                        }\n                    </div>\n                    <PaginationControlled tag={tag}/>\n                </div>\n            </div>\n        </>\n    )\n})\n\nconst useStyles = makeStyles((theme) =>\n\n    createStyles({\n        root: {\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n    }),\n);\n\nexport const PaginationControlled = React.memo(function (props: any) {\n    const postPage = useSelector((state: any) => state.postsPage)\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    const [page, setPage] = useState(postPage.current_page);\n\n    const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n        dispatch(getPostsData(value, props.tag.join()))\n    };\n\n    useEffect(() => {\n        setPage(1)\n    }, [])\n\n    const count = (total: number, perPage: number) => {\n        return Math.ceil(total / perPage)\n    }\n\n    return (\n        <div className={classes.root}>\n            <Pagination count={count(postPage.total, postPage.per_page)} page={page} onChange={handleChange}/>\n        </div>\n    );\n})\n\n\n\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx",["237"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx",["238"],"import React from 'react';\nimport Dialog, {DialogProps} from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport const TermOfService = (props: any) => {\n    const [open, setOpen] = React.useState(true);\n\n\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n\n    return (\n        <div>\n            <Dialog\n                disableBackdropClick={false}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        tabIndex={-1}\n                    >\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, cum debitis et ipsam\n                        molestias nobis. Asperiores ea perferendis quia repellat sequi! Aliquam atque eligendi fugit,\n                        iste nam placeat rem voluptas.Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, cum debitis et ipsam\n                        molestias nobis. Asperiores ea perferendis quia repellat sequi! Aliquam atque eligendi fugit,\n                        iste nam placeat rem voluptas.\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n",["239","240"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx",["241","242"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Tags/Tags.tsx",["243","244","245","246","247"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post Loader/PostLoader.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/InitialiseLoading/InitialiseLoading.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts",["248"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/ProfileFirstSetUp/ProfileSettings.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/ProfileFirstSetUp/ProfileDescription-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ChangePassword/ChangePassword-reducer.ts",["249"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/AlertSnackBar/AlertSnackbar.tsx",[],{"ruleId":"250","severity":1,"message":"251","line":23,"column":12,"nodeType":"252","endLine":23,"endColumn":27,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":34,"column":69,"nodeType":"256","messageId":"257","endLine":34,"endColumn":75},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"254","severity":1,"message":"262","line":33,"column":11,"nodeType":"256","messageId":"257","endLine":33,"endColumn":18},{"ruleId":"254","severity":1,"message":"263","line":34,"column":9,"nodeType":"256","messageId":"257","endLine":34,"endColumn":17},{"ruleId":"258","replacedBy":"264"},{"ruleId":"260","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":46,"column":7,"nodeType":"256","messageId":"268","endLine":46,"endColumn":13},{"ruleId":"254","severity":1,"message":"269","line":13,"column":9,"nodeType":"256","messageId":"257","endLine":13,"endColumn":18},{"ruleId":"258","replacedBy":"270"},{"ruleId":"260","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":1,"column":11,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":5,"column":1,"nodeType":"278","endLine":7,"endColumn":3},{"ruleId":"258","replacedBy":"264"},{"ruleId":"260","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"279","line":29,"column":7,"nodeType":"256","messageId":"268","endLine":29,"endColumn":14},{"ruleId":"272","severity":1,"message":"273","line":1,"column":11,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":5,"column":1,"nodeType":"278","endLine":13,"endColumn":3},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"258","replacedBy":"280"},{"ruleId":"260","replacedBy":"281"},{"ruleId":"250","severity":1,"message":"282","line":43,"column":8,"nodeType":"252","endLine":43,"endColumn":10,"suggestions":"283"},{"ruleId":"250","severity":1,"message":"284","line":53,"column":8,"nodeType":"252","endLine":53,"endColumn":30,"suggestions":"285"},{"ruleId":"254","severity":1,"message":"286","line":11,"column":8,"nodeType":"256","messageId":"257","endLine":11,"endColumn":16},{"ruleId":"272","severity":1,"message":"273","line":1,"column":11,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":4,"column":1,"nodeType":"278","endLine":6,"endColumn":3},{"ruleId":"258","replacedBy":"270"},{"ruleId":"260","replacedBy":"271"},{"ruleId":"258","replacedBy":"287"},{"ruleId":"260","replacedBy":"288"},{"ruleId":"254","severity":1,"message":"263","line":21,"column":9,"nodeType":"256","messageId":"257","endLine":21,"endColumn":17},{"ruleId":"254","severity":1,"message":"289","line":7,"column":17,"nodeType":"256","messageId":"257","endLine":7,"endColumn":26},{"ruleId":"254","severity":1,"message":"290","line":2,"column":17,"nodeType":"256","messageId":"257","endLine":2,"endColumn":28},{"ruleId":"258","replacedBy":"291"},{"ruleId":"260","replacedBy":"292"},{"ruleId":"254","severity":1,"message":"293","line":102,"column":11,"nodeType":"256","messageId":"257","endLine":102,"endColumn":19},{"ruleId":"254","severity":1,"message":"294","line":103,"column":11,"nodeType":"256","messageId":"257","endLine":103,"endColumn":19},{"ruleId":"254","severity":1,"message":"295","line":6,"column":8,"nodeType":"256","messageId":"257","endLine":6,"endColumn":13},{"ruleId":"254","severity":1,"message":"296","line":21,"column":12,"nodeType":"256","messageId":"257","endLine":21,"endColumn":20},{"ruleId":"254","severity":1,"message":"297","line":21,"column":22,"nodeType":"256","messageId":"257","endLine":21,"endColumn":33},{"ruleId":"250","severity":1,"message":"298","line":33,"column":8,"nodeType":"252","endLine":33,"endColumn":18,"suggestions":"299"},{"ruleId":"250","severity":1,"message":"300","line":55,"column":9,"nodeType":"252","endLine":55,"endColumn":55,"suggestions":"301"},{"ruleId":"254","severity":1,"message":"302","line":4,"column":9,"nodeType":"256","messageId":"257","endLine":4,"endColumn":28},{"ruleId":"266","severity":1,"message":"303","line":31,"column":7,"nodeType":"256","messageId":"268","endLine":31,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["304"],"@typescript-eslint/no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["305"],"no-negated-in-lhs",["306"],"'history' is assigned a value but never used.","'location' is assigned a value but never used.",["305"],["306"],"@typescript-eslint/no-redeclare","'SetReg' is already defined.","redeclared","'setStatus' is defined but never used.",["305"],["306"],"no-redeclare","'sessionStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ResetPw' is already defined.",["305"],["306"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["308"],"'MenuItem' is defined but never used.",["305"],["306"],"'TextField' is defined but never used.","'DialogProps' is defined but never used.",["305"],["306"],"'dispatch' is assigned a value but never used.","'selector' is assigned a value but never used.","'Paper' is defined but never used.","'required' is assigned a value but never used.","'setRequired' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initialValues' and 'tags'. Either include them or remove the dependency array.",["309"],"React Hook useCallback has missing dependencies: 'dispatch' and 'unusedCategories'. Either include them or remove the dependency array.",["310"],"'setAppInitializedAC' is defined but never used.","'ChangePw' is already defined.",{"desc":"311","fix":"312"},"no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [dispatch, initialValues]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch]",{"range":"323","text":"324"},"Update the dependencies array to be: [history, selector.auth.isAuth]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch, initialValues, tags]",{"range":"327","text":"328"},"Update the dependencies array to be: [categories, initialValues, unusedCategories, history, location, dispatch]",{"range":"329","text":"330"},[888,903],"[dispatch, initialValues]",[2213,2215],"[dispatch]",[2410,2432],"[history, selector.auth.isAuth]",[1372,1382],"[dispatch, initialValues, tags]",[1974,2020],"[categories, initialValues, unusedCategories, history, location, dispatch]"]