[{"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts":"1","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx":"2","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx":"3","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts":"4","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx":"5","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx":"6","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx":"7","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx":"8","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx":"9","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts":"10","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts":"11","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx":"12","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx":"13","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx":"14","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts":"15","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js":"16","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts":"17","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js":"18","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts":"19","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts":"20","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx":"21","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx":"22","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx":"23","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx":"24","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ErrorSnackbar/ErrorSnackbar.tsx":"25","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js":"26","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx":"27","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx":"28","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts":"29","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts":"30","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx":"31","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx":"32","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx":"33","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx":"34","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts":"35","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx":"36","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx":"37","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx":"38","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Tags/Tags.tsx":"39","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post Loader/PostLoader.tsx":"40","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/InitialiseLoading/InitialiseLoading.tsx":"41","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts":"42","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts":"43"},{"size":1672,"mtime":1618705307503,"results":"44","hashOfConfig":"45"},{"size":3727,"mtime":1621289537860,"results":"46","hashOfConfig":"45"},{"size":2208,"mtime":1621163329462,"results":"47","hashOfConfig":"45"},{"size":1855,"mtime":1621178205665,"results":"48","hashOfConfig":"45"},{"size":2987,"mtime":1621157319651,"results":"49","hashOfConfig":"45"},{"size":5000,"mtime":1618815015210,"results":"50","hashOfConfig":"45"},{"size":1615,"mtime":1618814571084,"results":"51","hashOfConfig":"45"},{"size":3505,"mtime":1621259946306,"results":"52","hashOfConfig":"45"},{"size":10392,"mtime":1621260050080,"results":"53","hashOfConfig":"45"},{"size":2072,"mtime":1621260568326,"results":"54","hashOfConfig":"45"},{"size":883,"mtime":1621260568449,"results":"55","hashOfConfig":"45"},{"size":2621,"mtime":1621155441589,"results":"56","hashOfConfig":"45"},{"size":2240,"mtime":1621172924451,"results":"57","hashOfConfig":"45"},{"size":3304,"mtime":1621260568348,"results":"58","hashOfConfig":"45"},{"size":762,"mtime":1618814571112,"results":"59","hashOfConfig":"45"},{"size":196,"mtime":1614614785629,"results":"60","hashOfConfig":"45"},{"size":1538,"mtime":1621178205467,"results":"61","hashOfConfig":"45"},{"size":257,"mtime":1614596746714,"results":"62","hashOfConfig":"45"},{"size":2123,"mtime":1618813407367,"results":"63","hashOfConfig":"45"},{"size":4074,"mtime":1621260568364,"results":"64","hashOfConfig":"45"},{"size":759,"mtime":1614700733526,"results":"65","hashOfConfig":"45"},{"size":5044,"mtime":1621293931776,"results":"66","hashOfConfig":"45"},{"size":4458,"mtime":1621260012578,"results":"67","hashOfConfig":"45"},{"size":2736,"mtime":1621177840164,"results":"68","hashOfConfig":"45"},{"size":1008,"mtime":1621260568457,"results":"69","hashOfConfig":"45"},{"size":165,"mtime":1614590074739,"results":"70","hashOfConfig":"45"},{"size":6897,"mtime":1621263297522,"results":"71","hashOfConfig":"45"},{"size":6063,"mtime":1621259655763,"results":"72","hashOfConfig":"45"},{"size":1682,"mtime":1621184181765,"results":"73","hashOfConfig":"45"},{"size":855,"mtime":1621260568353,"results":"74","hashOfConfig":"45"},{"size":4990,"mtime":1621289033230,"results":"75","hashOfConfig":"45"},{"size":3753,"mtime":1621245949919,"results":"76","hashOfConfig":"45"},{"size":2693,"mtime":1621263252561,"results":"77","hashOfConfig":"45"},{"size":1666,"mtime":1619271840176,"results":"78","hashOfConfig":"45"},{"size":425,"mtime":1614693580608,"results":"79","hashOfConfig":"45"},{"size":4842,"mtime":1617115697967,"results":"80","hashOfConfig":"45"},{"size":909,"mtime":1614775738593,"results":"81","hashOfConfig":"45"},{"size":6120,"mtime":1621178656674,"results":"82","hashOfConfig":"45"},{"size":4837,"mtime":1621260568440,"results":"83","hashOfConfig":"45"},{"size":1675,"mtime":1621164341218,"results":"84","hashOfConfig":"45"},{"size":190,"mtime":1621287247388,"results":"85","hashOfConfig":"45"},{"size":1624,"mtime":1621278269708,"results":"86","hashOfConfig":"45"},{"size":3104,"mtime":1621287659676,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1rblnuh",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"137"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"121"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts",[],["195","196"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx",["197"],"import {Redirect, useHistory} from \"react-router-dom\";\nimport React, {useCallback, useState} from \"react\";\nimport getFormData from \"./services/getFormData\";\nimport {Button} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addPost} from \"./AddPost-reducer\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {CategoriesType} from \"../../Post/PostCard\";\n\nexport const Review = React.memo(function () {\n    const dispatch = useDispatch()\n    const postId = useSelector((state: any) => state.addPostReducer.id)\n\n    const history = useHistory();\n    const [initialValues] = useState(getFormData());\n\n    const [redirect, setRedirect] = useState(false)\n\n    const onSubmit = useCallback(\n        () => {\n            dispatch(addPost(initialValues['Title'], initialValues['Content'], initialValues['categories']))\n            setRedirect(true)\n        }, [initialValues]\n    );\n\n    const onBack = useCallback(() => {\n        history.goBack();\n    }, [history]);\n\n\n    if (redirect) {\n        if (postId !== null) {\n            return <Redirect to={`/post/${postId}`}/>\n        }\n    }\n\n    return (\n        <div>\n            <h2 style={{marginBottom: '15px'}}>{initialValues['Title']}</h2>\n            <h4 style={{marginBottom: '15px'}}>{initialValues['Content']}</h4>\n            <ul style={{display: \"flex\", marginBottom: '15px'}}>\n                {initialValues['categories'].map((data: CategoriesType) => {\n                    return (\n                        <li key={data.id} style={{listStyleType: \"none\", margin: \"0 5px 10px 0\"}}>\n                            <Chip\n                                label={data.name}\n                            />\n                        </li>\n                    );\n                })}\n            </ul>\n            <div style={{display: 'flex', justifyContent: \"flex-end\", marginTop: \"3rem\"}}>\n                <Button variant=\"outlined\" onClick={onBack} style={{marginRight: \"1.5rem\"}}>\n                    Tagasi\n                </Button>\n                <Button variant=\"outlined\" color=\"primary\" type=\"submit\" onClick={onSubmit}>\n                    Postita\n                </Button>\n            </div>\n\n        </div>\n    );\n})\n",["198","199"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx",["200","201"],"import {useHistory, useLocation} from \"react-router-dom\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport getFormData from \"./services/getFormData\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport setFormData from \"./services/setFormData\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {KeyboardBackspace} from \"@material-ui/icons\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Button} from \"@material-ui/core\";\n\nexport const Content = React.memo(function () {\n    const history = useHistory();\n    const location = useLocation();\n    const [initialValues] = useState(getFormData());\n\n    const {handleSubmit, setValue, errors: fieldsErrors, control} = useForm({mode: 'onTouched'});\n\n    useEffect(() => {\n        setValue(\"Content\", initialValues['Content'])\n    }, [setValue, initialValues]);\n\n    const onSubmit = useCallback(\n        (values) => {\n            let newOBJ = {...initialValues, ...values}\n            setFormData(newOBJ);\n            history.push({\n                ...location,\n                state: {\n                    activeStep: 2,\n                },\n            });\n        },\n        [history, location, initialValues]\n    );\n\n    const onBack = useCallback(() => {\n        history.goBack();\n    }, [history]);\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <FormControl variant=\"outlined\" fullWidth={true}>\n                    <Controller\n                        name=\"Content\"\n                        as={\n                            <TextField\n                                margin=\"normal\"\n                                id=\"firstName\"\n                                helperText={fieldsErrors.Content ? fieldsErrors.Content.message : ''}\n                                variant=\"outlined\"\n                                label=\"Sisu\"\n                                error={!!fieldsErrors.Content}\n                                name=\"Content\"\n                                autoFocus\n                                multiline={true}\n                                rows={5}\n                                fullWidth={true}\n                            />\n                        }\n                        control={control}\n                        defaultValue=\"\"\n                        rules={{\n                            required: 'Required',\n                        }}\n                    />\n                </FormControl>\n                <div style={{display: 'flex', justifyContent: \"flex-end\", marginTop: \"3rem\"}}>\n                    <Button variant=\"outlined\" onClick={onBack} style={{marginRight: \"1.5rem\"}}>\n                        Tagasi\n                    </Button>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                        Edasi\n                    </Button>\n                </div>\n\n            </form>\n        </>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx",["202"],"import React from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {Controller, useForm} from \"react-hook-form\";\nimport {TextField} from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useDispatch} from \"react-redux\";\nimport {SendComment} from \"./CommentView-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: '36ch',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\nexport const CommentView = React.memo(function (props: any) {\n    const dispatch = useDispatch()\n    const {handleSubmit, errors: fieldsErrors, control, formState: {errors}, reset} = useForm();\n    const classes = useStyles();\n\n    const onSubmit = (formData: { message: string }) => {\n        dispatch(SendComment(props.postId, 5, formData.message))\n        reset({})\n    };\n\n    return (\n        <>\n            {props.comments.map((comment: { id: number, review_text: string, user: { id: number, firstName: string, lastName: string } }) => {\n                return (\n                    <List className={classes.root} key={comment.id}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <h4>{comment.user.firstName[0] + comment.user.lastName[0]}</h4>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={comment.user.firstName + \" \" + comment.user.lastName}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {comment.review_text}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                    </List>\n                )\n            })}\n            <div style={{margin: 8}}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Controller\n                        name=\"message\"\n                        as={\n                            <TextField\n                                id=\"message\"\n                                helperText={fieldsErrors.message ? fieldsErrors.message.message : ''}\n                                label=\"\"\n                                error={!!fieldsErrors.message}\n                                name=\"message\"\n                                multiline={true}\n                                fullWidth\n                                margin=\"normal\"\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                edge=\"end\"\n                                                type={'submit'}\n                                            >\n                                                {<Tooltip title=\"Komenteeri\">\n                                                    <SendIcon/>\n                                                </Tooltip>}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        }\n                        control={control}\n                        defaultValue=''\n                        rules={{\n                            required: 'Sōnum on tühi'\n                        }}\n                    />\n                </form>\n            </div>\n        </>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx",[],["203","204"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts",["205"],"import {ThunkAction} from \"redux-thunk\";\nimport {registerApi} from \"../../api/api\";\nimport {setError, setStatus} from \"../../app/app-reducer\";\n\nconst SET_REG = 'SET_REG'\n\n\ntype SetReg = {\n    type: typeof SET_REG\n    payload: {\n        email: string | null,\n        password: string | null,\n        firstName: string | null,\n        lastName: string | null\n    }\n}\n\ntype InitialStateType = {\n    email: string | null,\n    password: string | null,\n    firstName: string | null,\n    lastName: string | null,\n}\n\nlet initialState: InitialStateType = {\n    email: null,\n    password: null,\n    firstName: null,\n    lastName: null\n}\n\n\nexport const registerReducer = (state = initialState, action: SetReg) => {\n    switch (action.type) {\n        case SET_REG: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state\n    }\n}\n\nconst SetReg = (email: string, firstName: string, lastName: string, password: string,): SetReg => {\n    return {\n        type: SET_REG,\n        payload: {\n            email,\n            password,\n            firstName,\n            lastName\n        }\n    }\n}\n\ntype ThunkType = ThunkAction<any, any, any, any>;\n\nexport const register = (email: string, firstName: string, lastName: string, password: string): ThunkType => {\n    return async (dispatch) => {\n        try {\n            dispatch(setStatus('loading'))\n            registerApi.register(email, firstName, lastName, password)\n                .then(response => {\n                        response.status = 201\n                        dispatch(SetReg(email, firstName, lastName, password))\n                        dispatch(setStatus('succeeded'))\n                        dispatch(setStatus('confirm'))\n                    }\n                )\n                .catch((error) => {\n                    console.log(error.response.data)\n                    dispatch(setError(error.response.data))\n                    dispatch(setStatus('succeeded'))\n                })\n        } catch (error) {\n        }\n    }\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx",[],["206","207"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx",["208"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts",[],["209","210"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js",["211","212"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default (formData) => {\n    sessionStorage.setItem(STEPPER_FORM_DATA_KEY, JSON.stringify(formData));\n};\n",["213","214"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts",["215"],"import {ThunkAction} from \"redux-thunk\";\nimport {setError, setStatus} from \"../../app/alert-reducer\";\nimport {forgotPasswordApi} from \"../../api/api\";\n\nconst RESET_PASSWORD = 'RESET_PASSWORD'\n\ntype ResetPw = {\n    type: typeof RESET_PASSWORD\n    payload: {\n        email: string\n    }\n}\n\nconst initialState = {\n    email: null\n}\n\nexport const resetPwReducer = (state = initialState, action: ResetPw) => {\n    switch (action.type) {\n        case RESET_PASSWORD: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n    }\n}\n\nconst ResetPw = (email: string): ResetPw => {\n    return {\n        type: RESET_PASSWORD,\n        payload: {\n            email\n        }\n    }\n}\n\ntype ThunkType = ThunkAction<any, any, any, any>;\n\nexport const resetPw = (email: string): ThunkType => {\n    return async (dispatch) => {\n        try {\n            dispatch(setStatus('loading'))\n            forgotPasswordApi.passwordReset(email)\n                .then(response => {\n                    dispatch(ResetPw(email))\n                    dispatch(setStatus('succeeded'))\n                    debugger\n                    if (response.data.message === \"Email sent!\") {\n                        dispatch(setStatus('confirm'))\n                    }\n                })\n                .catch((error) => {\n                    dispatch(setError(error.response.data))\n                    dispatch(setStatus('succeeded'))\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js",["216","217"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default () => {\n  const rawFormData = sessionStorage.getItem(STEPPER_FORM_DATA_KEY);\n\n  if (!rawFormData) {\n    return [];\n  }\n\n  return JSON.parse(rawFormData);\n};\n",["218","219"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx",["220","221","222","223","224"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ErrorSnackbar/ErrorSnackbar.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js",["225","226"],"/* global sessionStorage */\nexport const STEPPER_FORM_DATA_KEY = \"stepper-form-data\";\n\nexport default () => {\n  sessionStorage.removeItem(STEPPER_FORM_DATA_KEY);\n};\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx",["227"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx",["228"],"import React, {useRef} from 'react';\nimport classes from './Main.module.css';\nimport kustLeidaToomest from '../../img/heroPilt.png';\nimport cardguy1 from '../../img/cardguy1.png';\nimport cardguy2 from '../../img/cardguy2.png';\nimport cardguy3 from '../../img/cardguy3.png';\nimport {Button, TextField} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nexport const Main = React.memo(function () {\n\n    const myRef = useRef(null)\n    // @ts-ignore\n    const executeScroll = () => myRef.current.scrollIntoView({behavior: 'smooth'})\n\n    return (\n        <div className={classes.landingContainer}>\n            <div className={classes.mainContainer}>\n                <div className={classes.main}>\n                    <div className={classes.meiegaLeiad}>Meiega Leiad</div>\n                    <div className={classes.subHeader}>We’ve helped over 2,500 job seekers to get into the most popular\n                        tech teams.\n                    </div>\n\n                    <Link to={\"/register\"} style={{color: \"white\", textDecoration: \"none\"}}>\n                        <Button variant=\"contained\" className={classes.register}>\n                            Registreeru\n                        </Button>\n                    </Link>\n\n                    <Button className={classes.howTo} onClick={executeScroll}>Kuidas see töötab &gt;</Button>\n                </div>\n                <div className={classes.mainImg}>\n                    <img src={kustLeidaToomest} alt=\"kust leida töömeest?\"/>\n                    {/*<TextField className={classes.search} id=\"standard-basic\" label=\"Otsi Siit\"/>*/}\n                </div>\n                {/*<div className={classes.searchContainer}>\n                     <div className={classes.search}>\n                        <TextField id=\"standard-basic\" label=\"Otsi Siit\" />\n                    </div>\n                </div>*/}\n            </div>\n\n            <div className={classes.cardsContainer}  ref={myRef}>\n                <div className={classes.card}>\n                    <div className={classes.cardImg}>\n                        <img src={cardguy1} alt=\"card1\"/>\n                        {/*<img className={classes.cardDoor} src={carddoor} alt=\"carddoor\"/>*/}\n                    </div>\n                    <div className={classes.cardText}>\n                        <h1>Hello world</h1>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has\n                            been the industry's standard dummy text ever since the 1500s</p>\n                    </div>\n                </div>\n\n                <div className={classes.card}>\n                    <div className={classes.cardText}>\n                        <h1>Hello world</h1>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has\n                            been the industry's standard dummy text ever since the 1500s</p>\n                    </div>\n                    <div className={classes.cardImg}>\n                        <img src={cardguy2} alt=\"card2\"/>\n                    </div>\n                </div>\n\n                <div className={classes.card}>\n                    <div className={classes.cardImg}>\n                        <img src={cardguy3} alt=\"card3\"/>\n                    </div>\n                    <div className={classes.cardText}>\n                        <h1>Hello world</h1>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has\n                            been the industry's standard dummy text ever since the 1500s</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx",["229"],"import React from 'react';\nimport Dialog, {DialogProps} from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport const TermOfService = (props: any) => {\n    const [open, setOpen] = React.useState(true);\n\n\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n\n    return (\n        <div>\n            <Dialog\n                disableBackdropClick={false}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        tabIndex={-1}\n                    >\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, cum debitis et ipsam\n                        molestias nobis. Asperiores ea perferendis quia repellat sequi! Aliquam atque eligendi fugit,\n                        iste nam placeat rem voluptas.Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, cum debitis et ipsam\n                        molestias nobis. Asperiores ea perferendis quia repellat sequi! Aliquam atque eligendi fugit,\n                        iste nam placeat rem voluptas.\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts",[],["230","231"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx",["232","233","234","235"],"import React from 'react';\nimport classes from './Footer.module.css'\nimport {Nav} from \"../Header/Header\";\nimport instagramSvg from '../../img/Instagram.svg'\n\n\nexport const Footer = () => {\n    return (\n        <div className={classes.footer}>\n            <div className={classes.footerNav}>\n                <Nav/>\n            </div>\n\n            <div className={classes.divider}></div>\n\n            <div className={classes.socialLinks}>\n                <div>© 2021 ReBuild. All rights reserved</div>\n                <div>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx",["236","237"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport {NavLink} from \"react-router-dom\";\nimport {logout} from \"../../../redux/app-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        paper: {\n            marginRight: theme.spacing(2),\n        },\n    }),\n);\n\nexport const ProfileMenuMobile = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.app)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    {selector.firstName}\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\n                    {({TransitionProps, placement}) => (\n\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/profile\">Profile</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}> {selector.isAuth &&\n                                        <div onClick={() => dispatch(logout())}>Logout</div>}</MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n\nexport const ProfileMenuMobileNotAuth = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                <PersonIcon/>\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/register\">Register</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}><NavLink to=\"/login\">Log in</NavLink></MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n",["238","239"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Tags/Tags.tsx",["240","241","242","243","244"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post Loader/PostLoader.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/InitialiseLoading/InitialiseLoading.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":23,"column":12,"nodeType":"251","endLine":23,"endColumn":27,"suggestions":"252"},{"ruleId":"245","replacedBy":"253"},{"ruleId":"247","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":18},{"ruleId":"255","severity":1,"message":"259","line":7,"column":9,"nodeType":"257","messageId":"258","endLine":7,"endColumn":26},{"ruleId":"255","severity":1,"message":"260","line":34,"column":69,"nodeType":"257","messageId":"258","endLine":34,"endColumn":75},{"ruleId":"245","replacedBy":"261"},{"ruleId":"247","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":46,"column":7,"nodeType":"257","messageId":"265","endLine":46,"endColumn":13},{"ruleId":"245","replacedBy":"266"},{"ruleId":"247","replacedBy":"267"},{"ruleId":"255","severity":1,"message":"268","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":18},{"ruleId":"245","replacedBy":"269"},{"ruleId":"247","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":11,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"276","line":5,"column":1,"nodeType":"277","endLine":7,"endColumn":3},{"ruleId":"245","replacedBy":"266"},{"ruleId":"247","replacedBy":"267"},{"ruleId":"263","severity":1,"message":"278","line":29,"column":7,"nodeType":"257","messageId":"265","endLine":29,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":1,"column":11,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"276","line":5,"column":1,"nodeType":"277","endLine":13,"endColumn":3},{"ruleId":"245","replacedBy":"253"},{"ruleId":"247","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"279","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":42},{"ruleId":"255","severity":1,"message":"280","line":25,"column":9,"nodeType":"257","messageId":"258","endLine":25,"endColumn":26},{"ruleId":"255","severity":1,"message":"281","line":39,"column":9,"nodeType":"257","messageId":"258","endLine":39,"endColumn":17},{"ruleId":"249","severity":1,"message":"282","line":43,"column":8,"nodeType":"251","endLine":43,"endColumn":10,"suggestions":"283"},{"ruleId":"249","severity":1,"message":"284","line":53,"column":8,"nodeType":"251","endLine":53,"endColumn":30,"suggestions":"285"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":11,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"276","line":4,"column":1,"nodeType":"277","endLine":6,"endColumn":3},{"ruleId":"255","severity":1,"message":"281","line":21,"column":9,"nodeType":"257","messageId":"258","endLine":21,"endColumn":17},{"ruleId":"255","severity":1,"message":"286","line":7,"column":17,"nodeType":"257","messageId":"258","endLine":7,"endColumn":26},{"ruleId":"255","severity":1,"message":"287","line":2,"column":17,"nodeType":"257","messageId":"258","endLine":2,"endColumn":28},{"ruleId":"245","replacedBy":"288"},{"ruleId":"247","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":19,"column":21,"nodeType":"292","endLine":19,"endColumn":32},{"ruleId":"290","severity":1,"message":"291","line":20,"column":21,"nodeType":"292","endLine":20,"endColumn":32},{"ruleId":"290","severity":1,"message":"291","line":21,"column":21,"nodeType":"292","endLine":21,"endColumn":32},{"ruleId":"290","severity":1,"message":"291","line":22,"column":21,"nodeType":"292","endLine":22,"endColumn":32},{"ruleId":"255","severity":1,"message":"293","line":102,"column":11,"nodeType":"257","messageId":"258","endLine":102,"endColumn":19},{"ruleId":"255","severity":1,"message":"294","line":103,"column":11,"nodeType":"257","messageId":"258","endLine":103,"endColumn":19},{"ruleId":"245","replacedBy":"295"},{"ruleId":"247","replacedBy":"296"},{"ruleId":"255","severity":1,"message":"297","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":13},{"ruleId":"255","severity":1,"message":"298","line":21,"column":12,"nodeType":"257","messageId":"258","endLine":21,"endColumn":20},{"ruleId":"255","severity":1,"message":"299","line":21,"column":22,"nodeType":"257","messageId":"258","endLine":21,"endColumn":33},{"ruleId":"249","severity":1,"message":"300","line":33,"column":8,"nodeType":"251","endLine":33,"endColumn":18,"suggestions":"301"},{"ruleId":"249","severity":1,"message":"302","line":55,"column":9,"nodeType":"251","endLine":55,"endColumn":55,"suggestions":"303"},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["306"],["304"],["305"],"@typescript-eslint/no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'KeyboardBackspace' is defined but never used.","'errors' is assigned a value but never used.",["304"],["305"],"@typescript-eslint/no-redeclare","'SetReg' is already defined.","redeclared",["304"],["305"],"'setStatus' is defined but never used.",["304"],["305"],"no-redeclare","'sessionStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ResetPw' is already defined.","'useLayoutEffect' is defined but never used.","'InitialiseLoading' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["308"],"'TextField' is defined but never used.","'DialogProps' is defined but never used.",["304"],["305"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dispatch' is assigned a value but never used.","'selector' is assigned a value but never used.",["304"],["305"],"'Paper' is defined but never used.","'required' is assigned a value but never used.","'setRequired' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initialValues' and 'tags'. Either include them or remove the dependency array.",["309"],"React Hook useCallback has missing dependencies: 'dispatch' and 'unusedCategories'. Either include them or remove the dependency array.",["310"],"no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [dispatch, initialValues]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch]",{"range":"323","text":"324"},"Update the dependencies array to be: [history, selector.auth.isAuth]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch, initialValues, tags]",{"range":"327","text":"328"},"Update the dependencies array to be: [categories, initialValues, unusedCategories, history, location, dispatch]",{"range":"329","text":"330"},[888,903],"[dispatch, initialValues]",[2229,2231],"[dispatch]",[2426,2448],"[history, selector.auth.isAuth]",[1372,1382],"[dispatch, initialValues, tags]",[1966,2012],"[categories, initialValues, unusedCategories, history, location, dispatch]"]