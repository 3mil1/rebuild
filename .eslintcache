[{"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts":"1","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx":"2","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx":"3","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts":"4","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx":"5","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx":"6","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx":"7","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx":"8","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx":"9","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts":"10","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts":"11","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx":"12","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx":"13","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx":"14","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts":"15","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js":"16","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts":"17","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js":"18","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts":"19","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts":"20","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx":"21","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx":"22","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx":"23","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx":"24","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ErrorSnackbar/ErrorSnackbar.tsx":"25","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js":"26","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx":"27","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx":"28","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts":"29","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts":"30","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts":"31","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts":"32","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx":"33","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx":"34","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx":"35","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx":"36","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts":"37","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx":"38","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx":"39","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx":"40","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Tags/Tags.tsx":"41","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post Loader/PostLoader.tsx":"42"},{"size":1672,"mtime":1618705307503,"results":"43","hashOfConfig":"44"},{"size":3797,"mtime":1621175420019,"results":"45","hashOfConfig":"44"},{"size":2208,"mtime":1621163329462,"results":"46","hashOfConfig":"44"},{"size":1852,"mtime":1618708361885,"results":"47","hashOfConfig":"44"},{"size":2987,"mtime":1621157319651,"results":"48","hashOfConfig":"44"},{"size":5000,"mtime":1618815015210,"results":"49","hashOfConfig":"44"},{"size":1615,"mtime":1618814571084,"results":"50","hashOfConfig":"44"},{"size":3549,"mtime":1618710510958,"results":"51","hashOfConfig":"44"},{"size":10392,"mtime":1619270452179,"results":"52","hashOfConfig":"44"},{"size":2072,"mtime":1619220404588,"results":"53","hashOfConfig":"44"},{"size":915,"mtime":1618708249308,"results":"54","hashOfConfig":"44"},{"size":2621,"mtime":1621155441589,"results":"55","hashOfConfig":"44"},{"size":2240,"mtime":1621172924451,"results":"56","hashOfConfig":"44"},{"size":3304,"mtime":1619265205069,"results":"57","hashOfConfig":"44"},{"size":762,"mtime":1618814571112,"results":"58","hashOfConfig":"44"},{"size":196,"mtime":1614614785629,"results":"59","hashOfConfig":"44"},{"size":1536,"mtime":1619264794748,"results":"60","hashOfConfig":"44"},{"size":257,"mtime":1614596746714,"results":"61","hashOfConfig":"44"},{"size":2123,"mtime":1618813407367,"results":"62","hashOfConfig":"44"},{"size":4074,"mtime":1621168369832,"results":"63","hashOfConfig":"44"},{"size":759,"mtime":1614700733526,"results":"64","hashOfConfig":"44"},{"size":4785,"mtime":1621012011429,"results":"65","hashOfConfig":"44"},{"size":4458,"mtime":1621160881228,"results":"66","hashOfConfig":"44"},{"size":2753,"mtime":1621012340571,"results":"67","hashOfConfig":"44"},{"size":1005,"mtime":1614693580548,"results":"68","hashOfConfig":"44"},{"size":165,"mtime":1614590074739,"results":"69","hashOfConfig":"44"},{"size":6850,"mtime":1621169905842,"results":"70","hashOfConfig":"44"},{"size":6063,"mtime":1621173436321,"results":"71","hashOfConfig":"44"},{"size":907,"mtime":1619220782524,"results":"72","hashOfConfig":"44"},{"size":2679,"mtime":1618318166172,"results":"73","hashOfConfig":"44"},{"size":1682,"mtime":1620995322791,"results":"74","hashOfConfig":"44"},{"size":854,"mtime":1618689532589,"results":"75","hashOfConfig":"44"},{"size":4941,"mtime":1621169548996,"results":"76","hashOfConfig":"44"},{"size":3761,"mtime":1621014463753,"results":"77","hashOfConfig":"44"},{"size":2693,"mtime":1619268236828,"results":"78","hashOfConfig":"44"},{"size":1666,"mtime":1619271840176,"results":"79","hashOfConfig":"44"},{"size":425,"mtime":1614693580608,"results":"80","hashOfConfig":"44"},{"size":4842,"mtime":1617115697967,"results":"81","hashOfConfig":"44"},{"size":909,"mtime":1614775738593,"results":"82","hashOfConfig":"44"},{"size":6166,"mtime":1614775738595,"results":"83","hashOfConfig":"44"},{"size":4837,"mtime":1621161691179,"results":"84","hashOfConfig":"44"},{"size":1675,"mtime":1621164341218,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1rblnuh",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"95"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"109"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts",[],["193","194"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx",["195","196"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx",["197"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts",[],["198","199"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx",["200","201"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx",["202"],"import React from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {Controller, useForm} from \"react-hook-form\";\nimport {TextField} from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useDispatch} from \"react-redux\";\nimport {SendComment} from \"./CommentView-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: '36ch',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\nexport const CommentView = React.memo(function (props: any) {\n    const dispatch = useDispatch()\n    const {handleSubmit, errors: fieldsErrors, control, formState: {errors}, reset} = useForm();\n    const classes = useStyles();\n\n    const onSubmit = (formData: { message: string }) => {\n        dispatch(SendComment(props.postId, 5, formData.message))\n        reset({})\n    };\n\n    return (\n        <>\n            {props.comments.map((comment: { id: number, review_text: string, user: { id: number, firstName: string, lastName: string } }) => {\n                return (\n                    <List className={classes.root} key={comment.id}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <h4>{comment.user.firstName[0] + comment.user.lastName[0]}</h4>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={comment.user.firstName + \" \" + comment.user.lastName}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {comment.review_text}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                    </List>\n                )\n            })}\n            <div style={{margin: 8}}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Controller\n                        name=\"message\"\n                        as={\n                            <TextField\n                                id=\"message\"\n                                helperText={fieldsErrors.message ? fieldsErrors.message.message : ''}\n                                label=\"\"\n                                error={!!fieldsErrors.message}\n                                name=\"message\"\n                                multiline={true}\n                                fullWidth\n                                margin=\"normal\"\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                edge=\"end\"\n                                                type={'submit'}\n                                            >\n                                                {<Tooltip title=\"Komenteeri\">\n                                                    <SendIcon/>\n                                                </Tooltip>}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        }\n                        control={control}\n                        defaultValue=''\n                        rules={{\n                            required: 'Sōnum on tühi'\n                        }}\n                    />\n                </form>\n            </div>\n        </>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx",[],["203","204"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx",["205"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport classes from \"../Header.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {logout} from \"../../../redux/auth-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        paper: {\n            marginRight: theme.spacing(2),\n        },\n    }),\n);\n\nexport const ProfileMenu = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    {selector.firstName}\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal style={{zIndex: 1}}>\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/profile\">Profile</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}> {selector.isAuth &&\n                                        <div onClick={() => dispatch(logout())}>Logout</div>}</MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx",[],["206","207"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts",["208"],"import {ThunkAction} from \"redux-thunk\";\nimport {registerApi} from \"../../api/api\";\nimport {setError, setStatus} from \"../../app/app-reducer\";\n\nconst SET_REG = 'SET_REG'\n\n\ntype SetReg = {\n    type: typeof SET_REG\n    payload: {\n        email: string | null,\n        password: string | null,\n        firstName: string | null,\n        lastName: string | null\n    }\n}\n\ntype InitialStateType = {\n    email: string | null,\n    password: string | null,\n    firstName: string | null,\n    lastName: string | null,\n}\n\nlet initialState: InitialStateType = {\n    email: null,\n    password: null,\n    firstName: null,\n    lastName: null\n}\n\n\nexport const registerReducer = (state = initialState, action: SetReg) => {\n    switch (action.type) {\n        case SET_REG: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state\n    }\n}\n\nconst SetReg = (email: string, firstName: string, lastName: string, password: string,): SetReg => {\n    return {\n        type: SET_REG,\n        payload: {\n            email,\n            password,\n            firstName,\n            lastName\n        }\n    }\n}\n\ntype ThunkType = ThunkAction<any, any, any, any>;\n\nexport const register = (email: string, firstName: string, lastName: string, password: string): ThunkType => {\n    return async (dispatch) => {\n        try {\n            dispatch(setStatus('loading'))\n            registerApi.register(email, firstName, lastName, password)\n                .then(response => {\n                        response.status = 201\n                        dispatch(SetReg(email, firstName, lastName, password))\n                        dispatch(setStatus('succeeded'))\n                        dispatch(setStatus('confirm'))\n                    }\n                )\n                .catch((error) => {\n                    console.log(error.response.data)\n                    dispatch(setError(error.response.data))\n                    dispatch(setStatus('succeeded'))\n                })\n        } catch (error) {\n        }\n    }\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts",[],["209","210"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx",["211"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from \"@material-ui/core/Link\";\nimport {resetPw} from \"./ForgotPassword-reducer\";\nimport {useDispatch} from \"react-redux\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {setStatus} from \"../../app/app-reducer\";\n\n\nexport const ForgotPassword = React.memo(function () {\n    const dispatch = useDispatch()\n\n    const [open, setOpen] = React.useState(false);\n\n    const {handleSubmit, errors: fieldsErrors, control} = useForm();\n\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const onSubmit = (formData: { email: string }) => {\n        dispatch(resetPw(formData.email))\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <Link href=\"#\" variant=\"body2\" onClick={handleClickOpen}>\n                Forgot password?\n            </Link>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Parooli Taastamine</DialogTitle>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <DialogContentText>\n                            Palun sisesta oma email ja me saadame sulle kirja parooli taastumisega.\n                        </DialogContentText>\n                        <Controller\n                            name=\"email\"\n                            as={\n                                <TextField\n                                    helperText={fieldsErrors.email ? fieldsErrors.email.message : ''}\n                                    label=\"Email\"\n                                    error={!!fieldsErrors.email}\n                                    autoComplete=\"email\"\n                                    name=\"email\"\n                                    fullWidth\n                                    autoFocus\n                                />\n                            }\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{\n                                required: 'Required',\n                                pattern: {\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                    message: 'invalid email address'\n                                }\n                            }}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Loobu\n                        </Button>\n                        <Button color=\"primary\" type=\"submit\">\n                            Saada kiri\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts",[],["212","213"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js",["214","215"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default (formData) => {\n    sessionStorage.setItem(STEPPER_FORM_DATA_KEY, JSON.stringify(formData));\n};\n",["216","217"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts",["218"],"import {ThunkAction} from \"redux-thunk\";\nimport {setError, setStatus} from \"../../app/app-reducer\";\nimport {forgotPasswordApi} from \"../../api/api\";\n\nconst RESET_PASSWORD = 'RESET_PASSWORD'\n\ntype ResetPw = {\n    type: typeof RESET_PASSWORD\n    payload: {\n        email: string\n    }\n}\n\nconst initialState = {\n    email: null\n}\n\nexport const resetPwReducer = (state = initialState, action: ResetPw) => {\n    switch (action.type) {\n        case RESET_PASSWORD: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n    }\n}\n\nconst ResetPw = (email: string): ResetPw => {\n    return {\n        type: RESET_PASSWORD,\n        payload: {\n            email\n        }\n    }\n}\n\ntype ThunkType = ThunkAction<any, any, any, any>;\n\nexport const resetPw = (email: string): ThunkType => {\n    return async (dispatch) => {\n        try {\n            dispatch(setStatus('loading'))\n            forgotPasswordApi.passwordReset(email)\n                .then(response => {\n                    dispatch(ResetPw(email))\n                    dispatch(setStatus('succeeded'))\n                    debugger\n                    if (response.data.message === \"Email sent!\") {\n                        dispatch(setStatus('confirm'))\n                    }\n                })\n                .catch((error) => {\n                    dispatch(setError(error.response.data))\n                    dispatch(setStatus('succeeded'))\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js",["219","220"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default () => {\n  const rawFormData = sessionStorage.getItem(STEPPER_FORM_DATA_KEY);\n\n  if (!rawFormData) {\n    return [];\n  }\n\n  return JSON.parse(rawFormData);\n};\n",["221","222"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx",[],["223","224"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx",["225","226"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ErrorSnackbar/ErrorSnackbar.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js",["227","228"],"/* global sessionStorage */\nexport const STEPPER_FORM_DATA_KEY = \"stepper-form-data\";\n\nexport default () => {\n  sessionStorage.removeItem(STEPPER_FORM_DATA_KEY);\n};\n",["229","230"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx",["231"],"import IconButton from \"@material-ui/core/IconButton\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport classes from \"./Post.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {CategoriesType} from \"./PostCard\";\nimport {TextField} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {getTags} from \"../GetPosts-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {updatePost} from \"../UpdatePost\";\nimport {ChoseTag} from \"../AddPost/Tags/Tags\";\nimport PostLoader from \"../Post Loader/PostLoader\";\nimport {AppRootStateType} from \"../../../redux/store\";\nimport {RequestStatusType, setError} from \"../../../app/app-reducer\";\n\nexport const Post = React.memo(function (props: any) {\n    const dispatch = useDispatch()\n    const userID = useSelector((state: any) => state.auth.userId)\n    const tags = useSelector((state: any) => state.postsPage.categories)\n    const [canEdit, edit] = useState(false)\n    const [categories, setCategories] = useState<CategoriesType[]>([]);\n    const [unusedCategories, setUnusedCategories] = useState<CategoriesType[]>([]);\n    const {handleSubmit, errors: fieldsErrors, control, formState: {errors}} = useForm({mode: \"onBlur\"});\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status)\n\n\n    useEffect(() => {\n        dispatch(getTags())\n        setCategories(props.categories)\n    }, [dispatch, props.categories]);\n\n\n    const editing = () => {\n        edit(true)\n        const filtered = tags.filter((a: { id: number; }) => !categories.map(b => b.id).includes(a.id))\n        setUnusedCategories(filtered)\n    }\n\n    const submit = () => {\n        if (Object.keys(errors).length === 0 && categories.length != 0) {\n            handleSubmit(onSubmit)()\n            edit(false)\n        } else {\n            dispatch(setError('Valige Taagid'))\n        }\n    }\n\n    const onSubmit = (formData: { title: string, content: string }) => {\n        dispatch(updatePost(props.id, formData.title, formData.content, categories.map(id => ({\"id\": id.id})), userID))\n    }\n\n    return (\n        <>\n            {status === \"PostLoading\" ? <PostLoader profile={true}/> :\n                <>\n                    <div style={{float: \"right\"}}>\n                        {props.canEdit ?\n                            canEdit ?\n                                <Tooltip title=\"Salvesta\">\n                                    <IconButton onClick={submit} type={'button'}\n                                                form=\"submit-form\"><DoneIcon/></IconButton>\n                                </Tooltip>\n                                :\n                                <Tooltip title=\"Muuda\">\n                                    <IconButton onClick={editing}><EditOutlinedIcon/></IconButton>\n                                </Tooltip>\n                            : false}\n                    </div>\n\n                    <form className={classes.form}>\n                        <div className={classes.hashtags}>\n                            {canEdit ?\n                                <ChoseTag categories={categories} unusedCategories={unusedCategories}\n                                          setCategories={setCategories}\n                                          setUnusedCategories={setUnusedCategories}/>\n\n                                : props.categories.map((categories: CategoriesType) =>\n                                    <div className={classes.hashtag} key={categories.name}>\n                                        #{categories.name}\n                                    </div>\n                                )}\n                        </div>\n                        <div className={classes.description}>\n                            {canEdit ?\n                                <Controller\n                                    name=\"title\"\n                                    as={\n                                        <TextField\n                                            id=\"title\"\n                                            helperText={fieldsErrors.title ? fieldsErrors.title.message : ''}\n                                            variant=\"outlined\"\n                                            label=\"Pealkiri\"\n                                            error={!!fieldsErrors.title}\n                                            name=\"title\"\n                                            autoFocus\n                                            size=\"small\"\n                                        />\n                                    }\n                                    control={control}\n                                    defaultValue={props.title}\n                                    rules={{\n                                        required: 'Required'\n                                    }}\n                                />\n\n                                :\n                                <NavLink to={'/post/' + props.id} style={{textDecoration: \"none\"}}>\n                                    <h2>{props.title}</h2>\n                                </NavLink>\n                            }\n                            <div style={{marginTop: \"10px\"}}>\n                                {canEdit ?\n                                    <Controller\n                                        name=\"content\"\n                                        as={\n                                            <TextField\n                                                id=\"content\"\n                                                helperText={fieldsErrors.content ? fieldsErrors.content.message : ''}\n                                                variant=\"outlined\"\n                                                label=\"Sisu\"\n                                                error={!!fieldsErrors.content}\n                                                name=\"content\"\n                                                autoFocus\n                                                multiline={true}\n                                                size=\"small\"\n                                            />\n                                        }\n                                        control={control}\n                                        defaultValue={props.content}\n                                        rules={{\n                                            required: 'Required'\n                                        }}\n                                    />\n                                    : props.content}\n                            </div>\n                        </div>\n                    </form>\n                </>\n            }\n        </>\n    )\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx",["232"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx",[],["233","234"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx",["235"],"import React from 'react';\nimport Dialog, {DialogProps} from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport const TermOfService = (props: any) => {\n    const [open, setOpen] = React.useState(true);\n\n\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n\n    return (\n        <div>\n            <Dialog\n                disableBackdropClick={false}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        tabIndex={-1}\n                    >\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, cum debitis et ipsam\n                        molestias nobis. Asperiores ea perferendis quia repellat sequi! Aliquam atque eligendi fugit,\n                        iste nam placeat rem voluptas.Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, cum debitis et ipsam\n                        molestias nobis. Asperiores ea perferendis quia repellat sequi! Aliquam atque eligendi fugit,\n                        iste nam placeat rem voluptas.\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx",["236","237","238","239"],"import React from 'react';\nimport classes from './Footer.module.css'\nimport {Nav} from \"../Header/Header\";\nimport instagramSvg from '../../img/Instagram.svg'\n\n\nexport const Footer = () => {\n    return (\n        <div className={classes.footer}>\n            <div className={classes.footerNav}>\n                <Nav/>\n            </div>\n\n            <div className={classes.divider}></div>\n\n            <div className={classes.socialLinks}>\n                <div>© 2021 ReBuild. All rights reserved</div>\n                <div>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx",["240","241","242"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport classes from \"../Header.module.css\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport {NavLink} from \"react-router-dom\";\nimport {logout} from \"../../../redux/auth-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        paper: {\n            marginRight: theme.spacing(2),\n        },\n    }),\n);\n\nexport const ProfileMenuMobile = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    {selector.firstName}\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\n                    {({TransitionProps, placement}) => (\n\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/profile\">Profile</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}> {selector.isAuth &&\n                                        <div onClick={() => dispatch(logout())}>Logout</div>}</MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n\nexport const ProfileMenuMobileNotAuth = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                <PersonIcon/>\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/register\">Register</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}><NavLink to=\"/login\">Log in</NavLink></MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Tags/Tags.tsx",["243","244","245","246","247"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post Loader/PostLoader.tsx",[],{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":18,"column":11,"nodeType":"254","messageId":"255","endLine":18,"endColumn":18},{"ruleId":"256","severity":1,"message":"257","line":25,"column":8,"nodeType":"258","endLine":25,"endColumn":18,"suggestions":"259"},{"ruleId":"256","severity":1,"message":"260","line":23,"column":12,"nodeType":"258","endLine":23,"endColumn":27,"suggestions":"261"},{"ruleId":"248","replacedBy":"262"},{"ruleId":"250","replacedBy":"263"},{"ruleId":"252","severity":1,"message":"264","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":18},{"ruleId":"252","severity":1,"message":"265","line":7,"column":9,"nodeType":"254","messageId":"255","endLine":7,"endColumn":26},{"ruleId":"252","severity":1,"message":"266","line":34,"column":69,"nodeType":"254","messageId":"255","endLine":34,"endColumn":75},{"ruleId":"248","replacedBy":"267"},{"ruleId":"250","replacedBy":"268"},{"ruleId":"252","severity":1,"message":"269","line":11,"column":8,"nodeType":"254","messageId":"255","endLine":11,"endColumn":15},{"ruleId":"248","replacedBy":"270"},{"ruleId":"250","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":46,"column":7,"nodeType":"254","messageId":"274","endLine":46,"endColumn":13},{"ruleId":"248","replacedBy":"275"},{"ruleId":"250","replacedBy":"276"},{"ruleId":"252","severity":1,"message":"277","line":13,"column":9,"nodeType":"254","messageId":"255","endLine":13,"endColumn":18},{"ruleId":"248","replacedBy":"278"},{"ruleId":"250","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":1,"column":11,"nodeType":"282","messageId":"283","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":5,"column":1,"nodeType":"286","endLine":7,"endColumn":3},{"ruleId":"248","replacedBy":"270"},{"ruleId":"250","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"287","line":29,"column":7,"nodeType":"254","messageId":"274","endLine":29,"endColumn":14},{"ruleId":"280","severity":1,"message":"281","line":1,"column":11,"nodeType":"282","messageId":"283","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":5,"column":1,"nodeType":"286","endLine":13,"endColumn":3},{"ruleId":"248","replacedBy":"262"},{"ruleId":"250","replacedBy":"263"},{"ruleId":"248","replacedBy":"288"},{"ruleId":"250","replacedBy":"289"},{"ruleId":"252","severity":1,"message":"290","line":33,"column":11,"nodeType":"254","messageId":"255","endLine":33,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":34,"column":11,"nodeType":"254","messageId":"255","endLine":34,"endColumn":18},{"ruleId":"280","severity":1,"message":"281","line":1,"column":11,"nodeType":"282","messageId":"283","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":4,"column":1,"nodeType":"286","endLine":6,"endColumn":3},{"ruleId":"248","replacedBy":"278"},{"ruleId":"250","replacedBy":"279"},{"ruleId":"291","severity":1,"message":"292","line":43,"column":67,"nodeType":"293","messageId":"294","endLine":43,"endColumn":69},{"ruleId":"252","severity":1,"message":"295","line":7,"column":17,"nodeType":"254","messageId":"255","endLine":7,"endColumn":26},{"ruleId":"248","replacedBy":"296"},{"ruleId":"250","replacedBy":"297"},{"ruleId":"252","severity":1,"message":"298","line":2,"column":17,"nodeType":"254","messageId":"255","endLine":2,"endColumn":28},{"ruleId":"299","severity":1,"message":"300","line":19,"column":21,"nodeType":"301","endLine":19,"endColumn":32},{"ruleId":"299","severity":1,"message":"300","line":20,"column":21,"nodeType":"301","endLine":20,"endColumn":32},{"ruleId":"299","severity":1,"message":"300","line":21,"column":21,"nodeType":"301","endLine":21,"endColumn":32},{"ruleId":"299","severity":1,"message":"300","line":22,"column":21,"nodeType":"301","endLine":22,"endColumn":32},{"ruleId":"252","severity":1,"message":"269","line":11,"column":8,"nodeType":"254","messageId":"255","endLine":11,"endColumn":15},{"ruleId":"252","severity":1,"message":"302","line":103,"column":11,"nodeType":"254","messageId":"255","endLine":103,"endColumn":19},{"ruleId":"252","severity":1,"message":"303","line":104,"column":11,"nodeType":"254","messageId":"255","endLine":104,"endColumn":19},{"ruleId":"252","severity":1,"message":"304","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":13},{"ruleId":"252","severity":1,"message":"305","line":21,"column":12,"nodeType":"254","messageId":"255","endLine":21,"endColumn":20},{"ruleId":"252","severity":1,"message":"306","line":21,"column":22,"nodeType":"254","messageId":"255","endLine":21,"endColumn":33},{"ruleId":"256","severity":1,"message":"307","line":33,"column":8,"nodeType":"258","endLine":33,"endColumn":18,"suggestions":"308"},{"ruleId":"256","severity":1,"message":"309","line":55,"column":9,"nodeType":"258","endLine":55,"endColumn":55,"suggestions":"310"},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selector.userId'. Either include it or remove the dependency array.","ArrayExpression",["313"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["314"],["311"],["312"],"'IconButton' is defined but never used.","'KeyboardBackspace' is defined but never used.","'errors' is assigned a value but never used.",["311"],["312"],"'classes' is defined but never used.",["311"],["312"],"@typescript-eslint/no-redeclare","'SetReg' is already defined.","redeclared",["311"],["312"],"'setStatus' is defined but never used.",["311"],["312"],"no-redeclare","'sessionStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ResetPw' is already defined.",["311"],["312"],"'isLoggedIn' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'TextField' is defined but never used.",["311"],["312"],"'DialogProps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dispatch' is assigned a value but never used.","'selector' is assigned a value but never used.","'Paper' is defined but never used.","'required' is assigned a value but never used.","'setRequired' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initialValues' and 'tags'. Either include them or remove the dependency array.",["315"],"React Hook useCallback has missing dependencies: 'dispatch' and 'unusedCategories'. Either include them or remove the dependency array.",["316"],"no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},"Update the dependencies array to be: [dispatch, selector.userId]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch, initialValues]",{"range":"327","text":"328"},"Update the dependencies array to be: [dispatch, initialValues, tags]",{"range":"329","text":"330"},"Update the dependencies array to be: [categories, initialValues, unusedCategories, history, location, dispatch]",{"range":"331","text":"332"},[925,935],"[dispatch, selector.userId]",[888,903],"[dispatch, initialValues]",[1372,1382],"[dispatch, initialValues, tags]",[1966,2012],"[categories, initialValues, unusedCategories, history, location, dispatch]"]