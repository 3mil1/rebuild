[{"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts":"1","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx":"2","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx":"3","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts":"4","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx":"5","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx":"6","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx":"7","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx":"8","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx":"9","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts":"10","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts":"11","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx":"12","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx":"13","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx":"14","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts":"15","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js":"16","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts":"17","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js":"18","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts":"19","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts":"20","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx":"21","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx":"22","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx":"23","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx":"24","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ErrorSnackbar/ErrorSnackbar.tsx":"25","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js":"26","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx":"27","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx":"28","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts":"29","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts":"30","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts":"31","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts":"32","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx":"33","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx":"34","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx":"35","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx":"36","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts":"37","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx":"38","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx":"39","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Tags.tsx":"40","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx":"41"},{"size":1672,"mtime":1618705307503,"results":"42","hashOfConfig":"43"},{"size":3740,"mtime":1618707605887,"results":"44","hashOfConfig":"43"},{"size":1920,"mtime":1619207211340,"results":"45","hashOfConfig":"43"},{"size":1852,"mtime":1618708361885,"results":"46","hashOfConfig":"43"},{"size":2688,"mtime":1618707833654,"results":"47","hashOfConfig":"43"},{"size":5000,"mtime":1618815015210,"results":"48","hashOfConfig":"43"},{"size":1615,"mtime":1618814571084,"results":"49","hashOfConfig":"43"},{"size":3549,"mtime":1618710510958,"results":"50","hashOfConfig":"43"},{"size":10392,"mtime":1619270452179,"results":"51","hashOfConfig":"43"},{"size":2072,"mtime":1619220404588,"results":"52","hashOfConfig":"43"},{"size":915,"mtime":1618708249308,"results":"53","hashOfConfig":"43"},{"size":2511,"mtime":1616577318488,"results":"54","hashOfConfig":"43"},{"size":2065,"mtime":1618705101402,"results":"55","hashOfConfig":"43"},{"size":3304,"mtime":1619265205069,"results":"56","hashOfConfig":"43"},{"size":762,"mtime":1618814571112,"results":"57","hashOfConfig":"43"},{"size":196,"mtime":1614614785629,"results":"58","hashOfConfig":"43"},{"size":1536,"mtime":1619264794748,"results":"59","hashOfConfig":"43"},{"size":257,"mtime":1614596746714,"results":"60","hashOfConfig":"43"},{"size":2123,"mtime":1618813407367,"results":"61","hashOfConfig":"43"},{"size":3878,"mtime":1618813407275,"results":"62","hashOfConfig":"43"},{"size":759,"mtime":1614700733526,"results":"63","hashOfConfig":"43"},{"size":4478,"mtime":1619265384249,"results":"64","hashOfConfig":"43"},{"size":2566,"mtime":1619210651725,"results":"65","hashOfConfig":"43"},{"size":2552,"mtime":1619206321098,"results":"66","hashOfConfig":"43"},{"size":1005,"mtime":1614693580548,"results":"67","hashOfConfig":"43"},{"size":165,"mtime":1614590074739,"results":"68","hashOfConfig":"43"},{"size":6997,"mtime":1618689442860,"results":"69","hashOfConfig":"43"},{"size":6069,"mtime":1619206819138,"results":"70","hashOfConfig":"43"},{"size":907,"mtime":1619220782524,"results":"71","hashOfConfig":"43"},{"size":2679,"mtime":1618318166172,"results":"72","hashOfConfig":"43"},{"size":1683,"mtime":1620835597571,"results":"73","hashOfConfig":"43"},{"size":854,"mtime":1618689532589,"results":"74","hashOfConfig":"43"},{"size":4109,"mtime":1618335662333,"results":"75","hashOfConfig":"43"},{"size":3402,"mtime":1614775738595,"results":"76","hashOfConfig":"43"},{"size":2693,"mtime":1619268236828,"results":"77","hashOfConfig":"43"},{"size":1666,"mtime":1619271840176,"results":"78","hashOfConfig":"43"},{"size":425,"mtime":1614693580608,"results":"79","hashOfConfig":"43"},{"size":4842,"mtime":1617115697967,"results":"80","hashOfConfig":"43"},{"size":909,"mtime":1614775738593,"results":"81","hashOfConfig":"43"},{"size":3365,"mtime":1618628670645,"results":"82","hashOfConfig":"43"},{"size":6166,"mtime":1614775738595,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1rblnuh",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"107"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile-reducer.ts",[],["195","196"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Profile/Profile.tsx",["197"],"import React, {useEffect} from 'react';\nimport classes from './Profile.module.css';\nimport {Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Avatar, Container} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Rating} from \"@material-ui/lab\";\nimport {getUserData} from \"./Profile-reducer\";\nimport {Post} from \"../Posts/Post/Post\";\n\n\nexport const Profile = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n    const loggedUserData = useSelector((state: any) => state.getUserReducer)\n    const posts = useSelector((state: any) => state.getUserReducer.posts)\n\n\n    useEffect(() => {\n        if (selector.userId != null) {\n            dispatch(getUserData(selector.userId))\n        }\n    }, [dispatch])\n\n\n    if (!selector.isAuth) {\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return (\n        <>\n            <Container maxWidth=\"xl\">\n                <Grid container spacing={3}>\n                    <Grid item xs={9}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3} className={classes.profileContainer}>\n                                <Grid item xs={2}>\n                                    <Avatar className={classes.profileImg} variant=\"rounded\">\n                                        <h3>{loggedUserData.firstName[0] + loggedUserData.lastName}</h3>\n                                    </Avatar>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <div>{loggedUserData.firstName}</div>\n                                    <div>Lühi kirjeldus Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem\n                                        beatae consectetur deleniti dicta\n                                    </div>\n                                    <div className={classes.rating}>\n                                        <Rating name=\"half-rating\" defaultValue={2.5} precision={0.5}/>\n                                    </div>\n                                </Grid>\n                                <Grid item xs={11}>\n                                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cum, libero, quod?\n                                    At corporis ducimus esse maiores odit officia, quidem.\n                                    Assumenda consequatur dolorum error fugit hic labore minima quibusdam soluta\n                                    voluptate!\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                        <Paper className={classes.paper}>Tags</Paper>\n                        <Paper className={classes.paper}>\n                            {posts.map((data: any) => {\n                                return (\n                                    <Post\n                                        key={data.id}\n                                        categories={data.categories}\n                                        id={data.id}\n                                        title={data.title}\n                                        content={data.content}\n                                        canEdit={true}\n                                    />\n                                )\n                            })}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Paper className={classes.paper}>xs=6</Paper>\n                    </Grid>\n\n                </Grid>\n            </Container>\n        </>\n    )\n})",["198","199"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Review.tsx",["200"],"import {Redirect, useHistory} from \"react-router-dom\";\nimport React, {useCallback, useState} from \"react\";\nimport getFormData from \"./services/getFormData\";\nimport {Button} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addPost} from \"./AddPost-reducer\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {CategoriesType} from \"../../Post/PostCard\";\n\nexport const Review = React.memo(function () {\n    const dispatch = useDispatch()\n    const postId = useSelector((state: any) => state.addPostReducer.id)\n\n    const history = useHistory();\n    const [initialValues] = useState(getFormData());\n\n    const [redirect, setRedirect] = useState(false)\n\n    const onSubmit = useCallback(\n        () => {\n            dispatch(addPost(initialValues['Title'], initialValues['Content'], initialValues['categories']))\n            setRedirect(true)\n        }, [initialValues]\n    );\n\n    const onBack = useCallback(() => {\n        history.goBack();\n    }, [history]);\n\n\n    if (redirect) {\n        if (postId !== null) {\n            return <Redirect to={`/post/${postId}`}/>\n        }\n    }\n\n    return (\n        <>\n            <Button onClick={onBack}>\n                Back\n            </Button>\n            <div>{initialValues['Title']}</div>\n            <div>{initialValues['Content']}</div>\n            <Paper component=\"ul\">\n                {initialValues['categories'].map((data: CategoriesType) => {\n                    return (\n                        <li key={data.id}>\n                            <Chip\n                                label={data.name}\n                            />\n                        </li>\n                    );\n                })}\n            </Paper>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={onSubmit}>\n                Postita\n            </Button>\n\n        </>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/AddPost-reducer.ts",[],["201","202"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Content.tsx",["203","204"],"import {useHistory, useLocation} from \"react-router-dom\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport getFormData from \"./services/getFormData\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport setFormData from \"./services/setFormData\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {KeyboardBackspace} from \"@material-ui/icons\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Button} from \"@material-ui/core\";\n\nexport const Content = React.memo(function () {\n    const history = useHistory();\n    const location = useLocation();\n    const [initialValues] = useState(getFormData());\n\n    const {handleSubmit, setValue, errors: fieldsErrors, control} = useForm({mode: 'onTouched'});\n\n    useEffect(() => {\n        setValue(\"Content\", initialValues['Content'])\n    }, [setValue, initialValues]);\n\n    const onSubmit = useCallback(\n        (values) => {\n            let newOBJ = {...initialValues, ...values}\n            setFormData(newOBJ);\n            history.push({\n                ...location,\n                state: {\n                    activeStep: 2,\n                },\n            });\n        },\n        [history, location, initialValues]\n    );\n\n    const onBack = useCallback(() => {\n        history.goBack();\n    }, [history]);\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <FormControl variant=\"outlined\">\n                    <Controller\n                        name=\"Content\"\n                        as={\n                            <TextField\n                                margin=\"normal\"\n                                id=\"firstName\"\n                                helperText={fieldsErrors.Content ? fieldsErrors.Content.message : ''}\n                                variant=\"outlined\"\n                                label=\"Content\"\n                                error={!!fieldsErrors.Content}\n                                name=\"Content\"\n                                autoFocus\n                                multiline={true}\n                            />\n                        }\n                        control={control}\n                        defaultValue=\"\"\n                        rules={{\n                            required: 'Required',\n                        }}\n                    />\n                </FormControl>\n                <Button onClick={onBack} >\n                    Back\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Next\n                </Button>\n\n            </form>\n        </>\n    );\n})",["205","206"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView.tsx",["207"],"import React from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {Controller, useForm} from \"react-hook-form\";\nimport {TextField} from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useDispatch} from \"react-redux\";\nimport {SendComment} from \"./CommentView-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: '36ch',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\nexport const CommentView = React.memo(function (props: any) {\n    const dispatch = useDispatch()\n    const {handleSubmit, errors: fieldsErrors, control, formState: {errors}, reset} = useForm();\n    const classes = useStyles();\n\n    const onSubmit = (formData: { message: string }) => {\n        dispatch(SendComment(props.postId, 5, formData.message))\n        reset({})\n    };\n\n    return (\n        <>\n            {props.comments.map((comment: { id: number, review_text: string, user: { id: number, firstName: string, lastName: string } }) => {\n                return (\n                    <List className={classes.root} key={comment.id}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <h4>{comment.user.firstName[0] + comment.user.lastName[0]}</h4>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={comment.user.firstName + \" \" + comment.user.lastName}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {comment.review_text}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                    </List>\n                )\n            })}\n            <div style={{margin: 8}}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Controller\n                        name=\"message\"\n                        as={\n                            <TextField\n                                id=\"message\"\n                                helperText={fieldsErrors.message ? fieldsErrors.message.message : ''}\n                                label=\"\"\n                                error={!!fieldsErrors.message}\n                                name=\"message\"\n                                multiline={true}\n                                fullWidth\n                                margin=\"normal\"\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                edge=\"end\"\n                                                type={'submit'}\n                                            >\n                                                {<Tooltip title=\"Komenteeri\">\n                                                    <SendIcon/>\n                                                </Tooltip>}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        }\n                        control={control}\n                        defaultValue=''\n                        rules={{\n                            required: 'Sōnum on tühi'\n                        }}\n                    />\n                </form>\n            </div>\n        </>\n    );\n})\n",["208","209"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPostPage.tsx",[],["210","211"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenu.tsx",["212"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport classes from \"../Header.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {logout} from \"../../../redux/auth-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        paper: {\n            marginRight: theme.spacing(2),\n        },\n    }),\n);\n\nexport const ProfileMenu = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    {selector.firstName}\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal style={{zIndex: 1}}>\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/profile\">Profile</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}> {selector.isAuth &&\n                                        <div onClick={() => dispatch(logout())}>Logout</div>}</MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/Register.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/register-reducer.ts",["213"],"import {ThunkAction} from \"redux-thunk\";\nimport {registerApi} from \"../../api/api\";\nimport {setError, setStatus} from \"../../app/app-reducer\";\n\nconst SET_REG = 'SET_REG'\n\n\ntype SetReg = {\n    type: typeof SET_REG\n    payload: {\n        email: string | null,\n        password: string | null,\n        firstName: string | null,\n        lastName: string | null\n    }\n}\n\ntype InitialStateType = {\n    email: string | null,\n    password: string | null,\n    firstName: string | null,\n    lastName: string | null,\n}\n\nlet initialState: InitialStateType = {\n    email: null,\n    password: null,\n    firstName: null,\n    lastName: null\n}\n\n\nexport const registerReducer = (state = initialState, action: SetReg) => {\n    switch (action.type) {\n        case SET_REG: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state\n    }\n}\n\nconst SetReg = (email: string, firstName: string, lastName: string, password: string,): SetReg => {\n    return {\n        type: SET_REG,\n        payload: {\n            email,\n            password,\n            firstName,\n            lastName\n        }\n    }\n}\n\ntype ThunkType = ThunkAction<any, any, any, any>;\n\nexport const register = (email: string, firstName: string, lastName: string, password: string): ThunkType => {\n    return async (dispatch) => {\n        try {\n            dispatch(setStatus('loading'))\n            registerApi.register(email, firstName, lastName, password)\n                .then(response => {\n                        response.status = 201\n                        dispatch(SetReg(email, firstName, lastName, password))\n                        dispatch(setStatus('succeeded'))\n                        dispatch(setStatus('confirm'))\n                    }\n                )\n                .catch((error) => {\n                    console.log(error.response.data)\n                    dispatch(setError(error.response.data))\n                    dispatch(setStatus('succeeded'))\n                })\n        } catch (error) {\n        }\n    }\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/store.ts",[],["214","215"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Title.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/PostCard.tsx",["216"],"import React from 'react';\nimport classes from './Post.module.css';\nimport firmaPilt from '../../../img/EhitusFirmaPilt.jpg'\nimport {Rating} from \"@material-ui/lab\";\nimport {Post} from \"./Post\";\nimport {Avatar} from \"@material-ui/core\";\n\n\ntype PropsType = {\n    id: string\n    title: string\n    content: string\n    createdAt: string\n    updatedAt: string\n    categories: CategoriesType[]\n    user: { id: number, firstName: string, lastName: string }\n}\n\nexport type CategoriesType = {\n    id: number,\n    name: string\n}\n\n\nexport const PostCard = React.memo((props: PropsType) => {\n    return (\n        <div className={classes.card}>\n            <div className={classes.cardInfo}>\n                <div className={classes.leftSideInfo}>\n                    <div className={classes.userInfo}>\n                        {/*<div className={classes.userImg}>*/}\n                        {/*    <img src={firmaPilt} alt=\"firmaPilt\"/>*/}\n                        {/*</div>*/}\n                        <Avatar className={classes.userImg} variant=\"rounded\">\n                            <h3>{props.user.firstName[0] + props.user.lastName[0]}</h3>\n                        </Avatar>\n                        <div className={classes.userName}>{props.user.firstName}</div>\n                        <div className={classes.userRating}>\n                            <Rating name=\"half-rating\" defaultValue={2.5} precision={0.5}/>\n                        </div>\n                        <div className={classes.userDesc}>Profiili kirjeldus lorem lorem lorem lorem</div>\n                    </div>\n                </div>\n                <div className={classes.addedChanged}>\n                        <span>Lisatud\n                            <p>{props.createdAt}</p>\n                        </span>\n                    <span>Muudetud\n                            <p>{props.updatedAt}</p>\n                        </span>\n                </div>\n            </div>\n            <Post categories={props.categories} id={props.id} title={props.title} content={props.content}/>\n        </div>\n    )\n})\n\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword.tsx",["217"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from \"@material-ui/core/Link\";\nimport {resetPw} from \"./ForgotPassword-reducer\";\nimport {useDispatch} from \"react-redux\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {setStatus} from \"../../app/app-reducer\";\n\n\nexport const ForgotPassword = React.memo(function () {\n    const dispatch = useDispatch()\n\n    const [open, setOpen] = React.useState(false);\n\n    const {handleSubmit, errors: fieldsErrors, control} = useForm();\n\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const onSubmit = (formData: { email: string }) => {\n        dispatch(resetPw(formData.email))\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <Link href=\"#\" variant=\"body2\" onClick={handleClickOpen}>\n                Forgot password?\n            </Link>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Parooli Taastamine</DialogTitle>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <DialogContent>\n                        <DialogContentText>\n                            Palun sisesta oma email ja me saadame sulle kirja parooli taastumisega.\n                        </DialogContentText>\n                        <Controller\n                            name=\"email\"\n                            as={\n                                <TextField\n                                    helperText={fieldsErrors.email ? fieldsErrors.email.message : ''}\n                                    label=\"Email\"\n                                    error={!!fieldsErrors.email}\n                                    autoComplete=\"email\"\n                                    name=\"email\"\n                                    fullWidth\n                                    autoFocus\n                                />\n                            }\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{\n                                required: 'Required',\n                                pattern: {\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                    message: 'invalid email address'\n                                }\n                            }}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Loobu\n                        </Button>\n                        <Button color=\"primary\" type=\"submit\">\n                            Saada kiri\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    );\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/Comments/CommentView-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/setFormData.js",["218","219"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default (formData) => {\n    sessionStorage.setItem(STEPPER_FORM_DATA_KEY, JSON.stringify(formData));\n};\n",["220","221"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ForgotPassword/ForgotPassword-reducer.ts",["222"],"import {ThunkAction} from \"redux-thunk\";\nimport {setError, setStatus} from \"../../app/app-reducer\";\nimport {forgotPasswordApi} from \"../../api/api\";\n\nconst RESET_PASSWORD = 'RESET_PASSWORD'\n\ntype ResetPw = {\n    type: typeof RESET_PASSWORD\n    payload: {\n        email: string\n    }\n}\n\nconst initialState = {\n    email: null\n}\n\nexport const resetPwReducer = (state = initialState, action: ResetPw) => {\n    switch (action.type) {\n        case RESET_PASSWORD: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n    }\n}\n\nconst ResetPw = (email: string): ResetPw => {\n    return {\n        type: RESET_PASSWORD,\n        payload: {\n            email\n        }\n    }\n}\n\ntype ThunkType = ThunkAction<any, any, any, any>;\n\nexport const resetPw = (email: string): ThunkType => {\n    return async (dispatch) => {\n        try {\n            dispatch(setStatus('loading'))\n            forgotPasswordApi.passwordReset(email)\n                .then(response => {\n                    dispatch(ResetPw(email))\n                    dispatch(setStatus('succeeded'))\n                    debugger\n                    if (response.data.message === \"Email sent!\") {\n                        dispatch(setStatus('confirm'))\n                    }\n                })\n                .catch((error) => {\n                    dispatch(setError(error.response.data))\n                    dispatch(setStatus('succeeded'))\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n",["223","224"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/getFormData.js",["225","226"],"/* global sessionStorage */\n\nimport {STEPPER_FORM_DATA_KEY} from \"./clearFormData\";\n\nexport default () => {\n  const rawFormData = sessionStorage.getItem(STEPPER_FORM_DATA_KEY);\n\n  if (!rawFormData) {\n    return [];\n  }\n\n  return JSON.parse(rawFormData);\n};\n",["227","228"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/CertainPostPage/CertainPost-Reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/GetPosts-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/index.tsx",[],["229","230"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/App.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/FormStepper.tsx",["231","232"],"import React, {useEffect} from 'react'\nimport Stepper from \"@material-ui/core/Stepper\";\nimport {MuiThemeProvider, Step, StepIconProps} from \"@material-ui/core\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport {Redirect, useLocation} from \"react-router-dom\";\nimport clearFormData from \"./services/clearFormData\";\nimport {Title} from \"./Title\";\nimport {Tags} from \"./Tags\";\nimport {Content} from \"./Content\";\nimport {Review} from \"./Review\";\nimport {useSelector} from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport classes from './FormStepper.module.css'\n\nconst TABS = [\n    {\n        component: Title,\n        title: \"Pealkiri\",\n        Description: 'Let\\'s start with a strong headline.\\n' +\n            'This helps your job post stand out to the right candidates. It’s the first thing they’ll see, so make it count!'\n    },\n    {\n        component: Content,\n        title: \"Sisu\",\n        Description: 'Desc 2'\n    },\n    {\n        component: Tags,\n        title: \"Tagid\",\n        Description: 'Desc 3'\n    },\n    {\n        component: Review,\n        title: \"Ülevaade\",\n        Description: 'Desc 4'\n    },\n];\n\n\nexport const FormStepper = React.memo(function () {\n    const isAuth = useSelector((state: any) => state.auth.isAuth)\n\n    type LocationState = {\n        activeStep: number\n    }\n\n    let {state = {activeStep: 0}} = useLocation<LocationState>();\n    if (state === null) {\n        state = {activeStep: 0}\n    }\n\n    const tab = TABS[state.activeStep];\n\n    useEffect(() => {\n        return () => {\n            clearFormData();\n        };\n    }, []);\n\n    if (!isAuth) {\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return (\n        <Grid container>\n            <Grid className={classes.container}>\n                <Paper variant=\"outlined\" square className={classes.paperLeft}>\n                    <Stepper activeStep={state.activeStep} alternativeLabel>\n                        {TABS.map(({title}, index) => {\n                            return (\n                                <Step key={index}>\n                                    <StepLabel>{title}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    <div>{tab.Description}</div>\n                </Paper>\n                <Paper variant=\"outlined\" square className={classes.paperRight}>\n                    {tab && <tab.component/>}\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n})\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/Header.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ErrorSnackbar/ErrorSnackbar.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/services/clearFormData.js",["233","234"],"/* global sessionStorage */\nexport const STEPPER_FORM_DATA_KEY = \"stepper-form-data\";\n\nexport default () => {\n  sessionStorage.removeItem(STEPPER_FORM_DATA_KEY);\n};\n",["235","236"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Post/Post.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Login/Login.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/app/app-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/redux/auth-reducer.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/api/api.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/UpdatePost.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/Posts.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Main/Main.tsx",["237"],"import React from 'react';\nimport classes from './Main.module.css';\nimport kusOnOtsing from '../../img/kusOnOtsing.png';\nimport cardguy1 from '../../img/cardguy1.png';\nimport cardguy2 from '../../img/cardguy2.png';\nimport cardguy3 from '../../img/cardguy3.png';\nimport {Button, TextField} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport const Main =React.memo(function () {\n    return (\n        <div className={classes.landingContainer}>\n            <div className={classes.mainContainer}>\n                <div className={classes.main}>\n                    <div className={classes.meiegaLeiad}>Meiega Leiad</div>\n                    <div className={classes.subHeader}>We’ve helped over 2,500 job seekers to get into the most popular\n                        tech teams.\n                    </div>\n                    <Button variant=\"contained\"  className={classes.register}>\n                        Registreeru\n                    </Button>\n\n                    <Button className={classes.howTo}>Kuidas see töötab &gt;</Button>\n                    {/*<span>Kuidas see töötab</span>*/}\n                </div>\n                <div className={classes.mainImg}>\n                    <img src={kusOnOtsing} alt=\"kusOnOtsing\"/>\n                    <TextField className={classes.search} id=\"standard-basic\" label=\"Otsi Siit\" />\n                </div>\n                {/*<div className={classes.searchContainer}>\n                     <div className={classes.search}>\n                        <TextField id=\"standard-basic\" label=\"Otsi Siit\" />\n                    </div>\n                </div>*/}\n            </div>\n\n            <div className={classes.cardsContainer}>\n                <div className={classes.card}>\n                    <div className={classes.cardImg}>\n                        <img src={cardguy1} alt=\"card1\"/>\n                        {/*<img className={classes.cardDoor} src={carddoor} alt=\"carddoor\"/>*/}\n                    </div>\n                    <div className={classes.cardText}>\n                        <h1>Hello world</h1>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</p>\n                    </div>\n                </div>\n\n                <div className={classes.card}>\n                    <div className={classes.cardText}>\n                        <h1>Hello world</h1>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</p>\n                    </div>\n                    <div className={classes.cardImg}>\n                        <img src={cardguy2} alt=\"card2\"/>\n                    </div>\n                </div>\n\n                <div className={classes.card}>\n                    <div className={classes.cardImg}>\n                        <img src={cardguy3} alt=\"card3\"/>\n                    </div>\n                    <div className={classes.cardText}>\n                        <h1>Hello world</h1>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n})","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/PopUpMailSent.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Register/TermOFService.tsx",["238"],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/reportWebVitals.ts",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/ProgressBar/ProgressBar.tsx",[],"/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Footer/Footer.tsx",["239","240","241","242"],"import React from 'react';\nimport classes from './Footer.module.css'\nimport {Nav} from \"../Header/Header\";\nimport instagramSvg from '../../img/Instagram.svg'\n\n\nexport const Footer = () => {\n    return (\n        <div className={classes.footer}>\n            <div className={classes.footerNav}>\n                <Nav/>\n            </div>\n\n            <div className={classes.divider}></div>\n\n            <div className={classes.socialLinks}>\n                <div>© 2021 ReBuild. All rights reserved</div>\n                <div>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                    <a href=\"\"><img src={instagramSvg} alt=\"instagramSvg\"/></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Posts/AddPost/Stepper/Tags.tsx",["243","244"],"import {useHistory, useLocation} from \"react-router-dom\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport getFormData from \"./services/getFormData\";\nimport setFormData from \"./services/setFormData\";\nimport {Button} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CategoriesType} from \"../../Post/PostCard\";\nimport {getTags} from \"../../GetPosts-reducer\";\n\n\nexport const Tags = React.memo(function () {\n    const dispatch = useDispatch()\n    const tags = useSelector((state: any) => state.postsPage.categories)\n    const history = useHistory();\n    const location = useLocation();\n    const [initialValues] = useState(getFormData());\n\n\n    useEffect(() => {\n        dispatch(getTags())\n        setUnusedCategories(tags)\n        if (initialValues['categories']) {\n            setCategories(initialValues['categories'])\n            setUnusedCategories(initialValues['unusedCategories'])\n        }\n    }, [dispatch]);\n\n    const onBack = useCallback(() => {\n        history.goBack();\n    }, [history]);\n\n\n    const [categories, setCategories] = useState<CategoriesType[]>([]);\n    const [unusedCategories, setUnusedCategories] = useState<CategoriesType[]>([]);\n\n\n    const onSubmit = useCallback(\n        () => {\n            if (categories.length !== 0) {\n                let newOBJ = {...initialValues, categories, unusedCategories}\n                setFormData(newOBJ);\n                history.push({\n                    ...location,\n                    state: {\n                        activeStep: 3,\n                    },\n                });\n            }\n        },\n        [history, location, initialValues, categories]\n    );\n\n    const handleDelete = (chipToDelete: CategoriesType) => () => {\n        setCategories((chips) => chips.filter((chip) => chip.id !== chipToDelete.id))\n        setUnusedCategories([...unusedCategories, chipToDelete]);\n    }\n\n    const onHandleDelete = (chipToDelete: CategoriesType) => () => {\n        setUnusedCategories((chips) => chips.filter((chip) => chip.id !== chipToDelete.id));\n        setCategories([...categories, chipToDelete]);\n    };\n\n\n    return (\n        <>\n            <Button onClick={onBack} >\n                Back\n            </Button>\n            <Paper component=\"ul\">\n                {categories.map((data) => {\n                    return (\n                        <li key={data.id}>\n                            <Chip\n                                label={data.name}\n                                onDelete={handleDelete(data)}\n                            />\n                        </li>\n                    );\n                })}\n            </Paper>\n            <hr/>\n            <Paper component=\"ul\">\n                {unusedCategories.map((data) => {\n                    return (\n                        <li key={data.id}>\n                            <Chip\n                                label={data.name}\n                                onClick={onHandleDelete(data)}\n                            />\n                        </li>\n                    );\n                })}\n            </Paper>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={onSubmit}>\n                ülevaade\n            </Button>\n        </>\n    );\n})","/Users/emilvarnomasig/Desktop/Projects/rebuild/src/components/Header/ProfileMenu/ProfileMenuMobile.tsx",["245","246","247"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport classes from \"../Header.module.css\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport {NavLink} from \"react-router-dom\";\nimport {logout} from \"../../../redux/auth-reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        paper: {\n            marginRight: theme.spacing(2),\n        },\n    }),\n);\n\nexport const ProfileMenuMobile = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    {selector.firstName}\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\n                    {({TransitionProps, placement}) => (\n\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/profile\">Profile</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}> {selector.isAuth &&\n                                        <div onClick={() => dispatch(logout())}>Logout</div>}</MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n\nexport const ProfileMenuMobileNotAuth = React.memo(function () {\n    const dispatch = useDispatch()\n    const selector = useSelector((state: any) => state.auth)\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current && !open) {\n            anchorRef.current!.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                <PersonIcon/>\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><NavLink\n                                            to=\"/register\">Register</NavLink></MenuItem>\n                                        <MenuItem onClick={handleClose}><NavLink to=\"/login\">Log in</NavLink></MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n})\n",{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":24,"column":8,"nodeType":"254","endLine":24,"endColumn":18,"suggestions":"255"},{"ruleId":"248","replacedBy":"256"},{"ruleId":"250","replacedBy":"257"},{"ruleId":"252","severity":1,"message":"258","line":24,"column":12,"nodeType":"254","endLine":24,"endColumn":27,"suggestions":"259"},{"ruleId":"248","replacedBy":"260"},{"ruleId":"250","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":18},{"ruleId":"262","severity":1,"message":"266","line":7,"column":9,"nodeType":"264","messageId":"265","endLine":7,"endColumn":26},{"ruleId":"248","replacedBy":"267"},{"ruleId":"250","replacedBy":"268"},{"ruleId":"262","severity":1,"message":"269","line":34,"column":69,"nodeType":"264","messageId":"265","endLine":34,"endColumn":75},{"ruleId":"248","replacedBy":"270"},{"ruleId":"250","replacedBy":"271"},{"ruleId":"248","replacedBy":"272"},{"ruleId":"250","replacedBy":"273"},{"ruleId":"262","severity":1,"message":"274","line":11,"column":8,"nodeType":"264","messageId":"265","endLine":11,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":46,"column":7,"nodeType":"264","messageId":"277","endLine":46,"endColumn":13},{"ruleId":"248","replacedBy":"278"},{"ruleId":"250","replacedBy":"279"},{"ruleId":"262","severity":1,"message":"280","line":3,"column":8,"nodeType":"264","messageId":"265","endLine":3,"endColumn":17},{"ruleId":"262","severity":1,"message":"281","line":13,"column":9,"nodeType":"264","messageId":"265","endLine":13,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":1,"column":11,"nodeType":"284","messageId":"285","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"287","line":5,"column":1,"nodeType":"288","endLine":7,"endColumn":3},{"ruleId":"248","replacedBy":"267"},{"ruleId":"250","replacedBy":"268"},{"ruleId":"275","severity":1,"message":"289","line":29,"column":7,"nodeType":"264","messageId":"277","endLine":29,"endColumn":14},{"ruleId":"248","replacedBy":"290"},{"ruleId":"250","replacedBy":"291"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":11,"nodeType":"284","messageId":"285","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"287","line":5,"column":1,"nodeType":"288","endLine":13,"endColumn":3},{"ruleId":"248","replacedBy":"270"},{"ruleId":"250","replacedBy":"271"},{"ruleId":"248","replacedBy":"292"},{"ruleId":"250","replacedBy":"293"},{"ruleId":"262","severity":1,"message":"294","line":3,"column":9,"nodeType":"264","messageId":"265","endLine":3,"endColumn":25},{"ruleId":"262","severity":1,"message":"295","line":3,"column":33,"nodeType":"264","messageId":"265","endLine":3,"endColumn":46},{"ruleId":"282","severity":1,"message":"283","line":1,"column":11,"nodeType":"284","messageId":"285","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"287","line":4,"column":1,"nodeType":"288","endLine":6,"endColumn":3},{"ruleId":"248","replacedBy":"256"},{"ruleId":"250","replacedBy":"257"},{"ruleId":"262","severity":1,"message":"296","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":18},{"ruleId":"262","severity":1,"message":"297","line":2,"column":17,"nodeType":"264","messageId":"265","endLine":2,"endColumn":28},{"ruleId":"298","severity":1,"message":"299","line":19,"column":21,"nodeType":"300","endLine":19,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":20,"column":21,"nodeType":"300","endLine":20,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":21,"column":21,"nodeType":"300","endLine":21,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":22,"column":21,"nodeType":"300","endLine":22,"endColumn":32},{"ruleId":"252","severity":1,"message":"301","line":28,"column":8,"nodeType":"254","endLine":28,"endColumn":18,"suggestions":"302"},{"ruleId":"252","severity":1,"message":"303","line":52,"column":9,"nodeType":"254","endLine":52,"endColumn":55,"suggestions":"304"},{"ruleId":"262","severity":1,"message":"274","line":11,"column":8,"nodeType":"264","messageId":"265","endLine":11,"endColumn":15},{"ruleId":"262","severity":1,"message":"305","line":103,"column":11,"nodeType":"264","messageId":"265","endLine":103,"endColumn":19},{"ruleId":"262","severity":1,"message":"306","line":104,"column":11,"nodeType":"264","messageId":"265","endLine":104,"endColumn":19},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selector.userId'. Either include it or remove the dependency array.","ArrayExpression",["309"],["307"],["308"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["310"],["307"],["308"],"@typescript-eslint/no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'KeyboardBackspace' is defined but never used.",["307"],["308"],"'errors' is assigned a value but never used.",["307"],["308"],["307"],["308"],"'classes' is defined but never used.","@typescript-eslint/no-redeclare","'SetReg' is already defined.","redeclared",["307"],["308"],"'firmaPilt' is defined but never used.","'setStatus' is defined but never used.","no-redeclare","'sessionStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ResetPw' is already defined.",["307"],["308"],["307"],["308"],"'MuiThemeProvider' is defined but never used.","'StepIconProps' is defined but never used.","'SearchIcon' is defined but never used.","'DialogProps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'initialValues' and 'tags'. Either include them or remove the dependency array.",["311"],"React Hook useCallback has a missing dependency: 'unusedCategories'. Either include it or remove the dependency array.",["312"],"'dispatch' is assigned a value but never used.","'selector' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [dispatch, selector.userId]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch, initialValues]",{"range":"323","text":"324"},"Update the dependencies array to be: [dispatch, initialValues, tags]",{"range":"325","text":"326"},"Update the dependencies array to be: [categories, initialValues, unusedCategories, history, location]",{"range":"327","text":"328"},[879,889],"[dispatch, selector.userId]",[933,948],"[dispatch, initialValues]",[1051,1061],"[dispatch, initialValues, tags]",[1725,1771],"[categories, initialValues, unusedCategories, history, location]"]